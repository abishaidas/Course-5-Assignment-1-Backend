{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "minikube",
                "uid": "e7a6443f-e718-4a63-b3e4-11ed922848cd",
                "resourceVersion": "4437",
                "creationTimestamp": "2023-07-01T21:05:21Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "minikube",
                    "kubernetes.io/os": "linux",
                    "minikube.k8s.io/commit": "08896fd1dc362c097c925146c4a0d0dac715ace0",
                    "minikube.k8s.io/name": "minikube",
                    "minikube.k8s.io/primary": "true",
                    "minikube.k8s.io/updated_at": "2023_07_02T02_35_24_0700",
                    "minikube.k8s.io/version": "v1.30.1",
                    "node-role.kubernetes.io/control-plane": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///var/run/cri-dockerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "8",
                    "ephemeral-storage": "263174212Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "12897324Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "8",
                    "ephemeral-storage": "263174212Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "12897324Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-07-02T14:02:16Z",
                        "lastTransitionTime": "2023-07-01T21:05:19Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-07-02T14:02:16Z",
                        "lastTransitionTime": "2023-07-01T21:05:19Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-07-02T14:02:16Z",
                        "lastTransitionTime": "2023-07-01T21:05:19Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2023-07-02T14:02:16Z",
                        "lastTransitionTime": "2023-07-01T21:05:35Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "192.168.49.2"
                    },
                    {
                        "type": "Hostname",
                        "address": "minikube"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "4be7b89512914632b7eb285a3ba7704a",
                    "systemUUID": "4be7b89512914632b7eb285a3ba7704a",
                    "bootID": "2d747324-55d7-4c94-af96-02ab6e62f467",
                    "kernelVersion": "5.10.102.1-microsoft-standard-WSL2",
                    "osImage": "Ubuntu 20.04.5 LTS",
                    "containerRuntimeVersion": "docker://23.0.2",
                    "kubeletVersion": "v1.26.3",
                    "kubeProxyVersion": "v1.26.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "abi20/assignmentservice@sha256:437512ac98d8c48d2a9ee762f992d6d214770046a72a03ae0a2f37bbbc61a6bd",
                            "abi20/assignmentservice:v1"
                        ],
                        "sizeBytes": 915207856
                    },
                    {
                        "names": [
                            "abi20/assignmentservice@sha256:e5a3b5d7686cda17419e0cdbb0d025a88c3699f4334925c22bb8e054a705332c",
                            "abi20/assignmentservice:v2"
                        ],
                        "sizeBytes": 915151438
                    },
                    {
                        "names": [
                            "registry.k8s.io/etcd@sha256:dd75ec974b0a2a6f6bb47001ba09207976e625db898d1b16735528c009cb171c",
                            "registry.k8s.io/etcd:3.5.6-0"
                        ],
                        "sizeBytes": 299475478
                    },
                    {
                        "names": [
                            "kubernetesui/dashboard@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93"
                        ],
                        "sizeBytes": 245710051
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-apiserver@sha256:b8dda58b0c680898b6ab7fdbd035a75065d3607a70c3c4986bc1d8cfba5f0ec8",
                            "registry.k8s.io/kube-apiserver:v1.26.3"
                        ],
                        "sizeBytes": 133945535
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-controller-manager@sha256:28c0deb96fd861af5560b7e24b989a5d61f4a4b8467852d6975bf2a3a5217840",
                            "registry.k8s.io/kube-controller-manager:v1.26.3"
                        ],
                        "sizeBytes": 123316762
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-proxy@sha256:d89b6c6a8ecc920753df713b268b0d226f795135c4a0ecc5ce61660e623dd6da",
                            "registry.k8s.io/kube-proxy:v1.26.3"
                        ],
                        "sizeBytes": 65635949
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-scheduler@sha256:ef87c0880906a21ba55392e4c28bb75a526dd1e295e423f73e67dfc48e0c345c",
                            "registry.k8s.io/kube-scheduler:v1.26.3"
                        ],
                        "sizeBytes": 56416728
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns@sha256:8e352a029d304ca7431c6507b56800636c321cb52289686a581ab70aaa8a2e2a",
                            "registry.k8s.io/coredns/coredns:v1.9.3"
                        ],
                        "sizeBytes": 48803555
                    },
                    {
                        "names": [
                            "kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c"
                        ],
                        "sizeBytes": 43815949
                    },
                    {
                        "names": [
                            "gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944",
                            "gcr.io/k8s-minikube/storage-provisioner:v5"
                        ],
                        "sizeBytes": 31465472
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
                            "registry.k8s.io/pause:3.9"
                        ],
                        "sizeBytes": 743952
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-787d4945fb-zx5fr.176e11926b2c6ef8",
                "namespace": "kube-system",
                "uid": "f23a2fdb-f65e-48f0-9f1d-5070ecea529b",
                "resourceVersion": "4073",
                "creationTimestamp": "2023-07-02T13:57:17Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-787d4945fb-zx5fr",
                "uid": "5fd9a29a-1746-42b5-b48e-216558785959",
                "apiVersion": "v1",
                "resourceVersion": "375"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:10Z",
            "lastTimestamp": "2023-07-02T13:57:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-787d4945fb-zx5fr.176e11937831b8dc",
                "namespace": "kube-system",
                "uid": "11ec175c-6a39-4301-b2e2-66936aeaf542",
                "resourceVersion": "4092",
                "creationTimestamp": "2023-07-02T13:57:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-787d4945fb-zx5fr",
                "uid": "5fd9a29a-1746-42b5-b48e-216558785959",
                "apiVersion": "v1",
                "resourceVersion": "375",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.9.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:15Z",
            "lastTimestamp": "2023-07-02T13:57:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-787d4945fb-zx5fr.176e11939abdc508",
                "namespace": "kube-system",
                "uid": "f510d105-2eb9-4e44-a3c7-7d1c111a86db",
                "resourceVersion": "4096",
                "creationTimestamp": "2023-07-02T13:57:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-787d4945fb-zx5fr",
                "uid": "5fd9a29a-1746-42b5-b48e-216558785959",
                "apiVersion": "v1",
                "resourceVersion": "375",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:15Z",
            "lastTimestamp": "2023-07-02T13:57:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-787d4945fb-zx5fr.176e1193ef2cf80c",
                "namespace": "kube-system",
                "uid": "2b0dbf49-55cf-4ace-9c9a-6b258457f235",
                "resourceVersion": "4107",
                "creationTimestamp": "2023-07-02T13:57:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-787d4945fb-zx5fr",
                "uid": "5fd9a29a-1746-42b5-b48e-216558785959",
                "apiVersion": "v1",
                "resourceVersion": "375",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:17Z",
            "lastTimestamp": "2023-07-02T13:57:17Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-787d4945fb-zx5fr.176e1194b981ea04",
                "namespace": "kube-system",
                "uid": "0dea54bd-bff5-4bf3-8604-c24521e7dd6c",
                "resourceVersion": "4121",
                "creationTimestamp": "2023-07-02T13:57:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-787d4945fb-zx5fr",
                "uid": "5fd9a29a-1746-42b5-b48e-216558785959",
                "apiVersion": "v1",
                "resourceVersion": "375",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: HTTP probe failed with statuscode: 503",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:20Z",
            "lastTimestamp": "2023-07-02T13:57:22Z",
            "count": 3,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-minikube.176e1190535d026c",
                "namespace": "kube-system",
                "uid": "120417b9-f8d5-4466-98ec-196623b14ea2",
                "resourceVersion": "4046",
                "creationTimestamp": "2023-07-02T13:57:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "a121e106627e5c6efa9ba48006cc43bf",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:01Z",
            "lastTimestamp": "2023-07-02T13:57:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-minikube.176e119082c56288",
                "namespace": "kube-system",
                "uid": "53492ec7-d10d-4d2b-818e-6801e24b0c8c",
                "resourceVersion": "4054",
                "creationTimestamp": "2023-07-02T13:57:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "a121e106627e5c6efa9ba48006cc43bf",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/etcd:3.5.6-0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:02Z",
            "lastTimestamp": "2023-07-02T13:57:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-minikube.176e11909ac7afa8",
                "namespace": "kube-system",
                "uid": "6fe66c53-9537-44a1-a8f0-18c30bb547b0",
                "resourceVersion": "4062",
                "creationTimestamp": "2023-07-02T13:57:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "a121e106627e5c6efa9ba48006cc43bf",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Created",
            "message": "Created container etcd",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:03Z",
            "lastTimestamp": "2023-07-02T13:57:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-minikube.176e1190d15199a8",
                "namespace": "kube-system",
                "uid": "dc6818ac-4bab-4943-9450-7188b408c552",
                "resourceVersion": "4068",
                "creationTimestamp": "2023-07-02T13:57:17Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "a121e106627e5c6efa9ba48006cc43bf",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Started",
            "message": "Started container etcd",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:03Z",
            "lastTimestamp": "2023-07-02T13:57:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "k8s.io-minikube-hostpath.176e119c33820800",
                "namespace": "kube-system",
                "uid": "3e20d140-b2e0-4d05-bf0f-e84d8c539426",
                "resourceVersion": "4165",
                "creationTimestamp": "2023-07-02T13:57:52Z"
            },
            "involvedObject": {
                "kind": "Endpoints",
                "namespace": "kube-system",
                "name": "k8s.io-minikube-hostpath",
                "uid": "bd96763b-2157-4154-be05-a00f067fc204",
                "apiVersion": "v1",
                "resourceVersion": "4164"
            },
            "reason": "LeaderElection",
            "message": "minikube_21808ad7-f7d9-470d-96be-6235eb9797b7 became leader",
            "source": {
                "component": "k8s.io/minikube-hostpath_minikube_21808ad7-f7d9-470d-96be-6235eb9797b7"
            },
            "firstTimestamp": "2023-07-02T13:57:52Z",
            "lastTimestamp": "2023-07-02T13:57:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.176e119058b1e750",
                "namespace": "kube-system",
                "uid": "c85bbe7d-2afc-4871-9b18-91af87023bbe",
                "resourceVersion": "4047",
                "creationTimestamp": "2023-07-02T13:57:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "cdcbce216c62c4407ac9a51ac013e7d7",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:01Z",
            "lastTimestamp": "2023-07-02T13:57:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.176e119082d7e728",
                "namespace": "kube-system",
                "uid": "349b9c3c-c1f4-4318-a873-e72c4b1e6c44",
                "resourceVersion": "4057",
                "creationTimestamp": "2023-07-02T13:57:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "cdcbce216c62c4407ac9a51ac013e7d7",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-apiserver:v1.26.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:02Z",
            "lastTimestamp": "2023-07-02T13:57:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.176e11909b720fac",
                "namespace": "kube-system",
                "uid": "7378ccdc-8903-41ff-96ae-bafd594f1e9d",
                "resourceVersion": "4063",
                "creationTimestamp": "2023-07-02T13:57:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "cdcbce216c62c4407ac9a51ac013e7d7",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Created",
            "message": "Created container kube-apiserver",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:03Z",
            "lastTimestamp": "2023-07-02T13:57:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.176e1190d1c1c930",
                "namespace": "kube-system",
                "uid": "7a45adef-0e25-482a-87a6-952920484015",
                "resourceVersion": "4069",
                "creationTimestamp": "2023-07-02T13:57:17Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "cdcbce216c62c4407ac9a51ac013e7d7",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Started",
            "message": "Started container kube-apiserver",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:04Z",
            "lastTimestamp": "2023-07-02T13:57:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.176e119058e38418",
                "namespace": "kube-system",
                "uid": "67a192a5-5174-4685-be6c-1525d61d3886",
                "resourceVersion": "4049",
                "creationTimestamp": "2023-07-02T13:57:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "466b9e73e627277a8c24637c2fa6442d",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:01Z",
            "lastTimestamp": "2023-07-02T13:57:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.176e11907dac6b0c",
                "namespace": "kube-system",
                "uid": "1f02f37c-19bd-4c0b-97a1-a948fc56cd52",
                "resourceVersion": "4053",
                "creationTimestamp": "2023-07-02T13:57:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "466b9e73e627277a8c24637c2fa6442d",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-controller-manager:v1.26.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:02Z",
            "lastTimestamp": "2023-07-02T13:57:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.176e119094e9b248",
                "namespace": "kube-system",
                "uid": "19d86d28-8560-4f6a-a899-1c82a2f89ce7",
                "resourceVersion": "4060",
                "creationTimestamp": "2023-07-02T13:57:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "466b9e73e627277a8c24637c2fa6442d",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Created",
            "message": "Created container kube-controller-manager",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:02Z",
            "lastTimestamp": "2023-07-02T13:57:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.176e1190d118c8bc",
                "namespace": "kube-system",
                "uid": "a9968b91-3118-4752-9911-24b8775cf9b1",
                "resourceVersion": "4065",
                "creationTimestamp": "2023-07-02T13:57:17Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "466b9e73e627277a8c24637c2fa6442d",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Started",
            "message": "Started container kube-controller-manager",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:03Z",
            "lastTimestamp": "2023-07-02T13:57:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-48r22.176e1192a089d7ac",
                "namespace": "kube-system",
                "uid": "68cbbffb-a274-4ad7-8dee-05ece7962c86",
                "resourceVersion": "4081",
                "creationTimestamp": "2023-07-02T13:57:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-48r22",
                "uid": "e851a316-875d-42af-a2c3-f49906f1644e",
                "apiVersion": "v1",
                "resourceVersion": "365"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:11Z",
            "lastTimestamp": "2023-07-02T13:57:11Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-48r22.176e119378373e88",
                "namespace": "kube-system",
                "uid": "74a4b67b-e63e-4062-8279-6e4d9b85685b",
                "resourceVersion": "4093",
                "creationTimestamp": "2023-07-02T13:57:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-48r22",
                "uid": "e851a316-875d-42af-a2c3-f49906f1644e",
                "apiVersion": "v1",
                "resourceVersion": "365",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.26.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:15Z",
            "lastTimestamp": "2023-07-02T13:57:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-48r22.176e11939ab26b2c",
                "namespace": "kube-system",
                "uid": "1d32a7bd-4718-42ee-afd4-5591b68feb6e",
                "resourceVersion": "4095",
                "creationTimestamp": "2023-07-02T13:57:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-48r22",
                "uid": "e851a316-875d-42af-a2c3-f49906f1644e",
                "apiVersion": "v1",
                "resourceVersion": "365",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:15Z",
            "lastTimestamp": "2023-07-02T13:57:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-48r22.176e1193f454463c",
                "namespace": "kube-system",
                "uid": "a1567ef7-b211-4534-937e-342e42b60a32",
                "resourceVersion": "4109",
                "creationTimestamp": "2023-07-02T13:57:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-48r22",
                "uid": "e851a316-875d-42af-a2c3-f49906f1644e",
                "apiVersion": "v1",
                "resourceVersion": "365",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:17Z",
            "lastTimestamp": "2023-07-02T13:57:17Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.176e119059338f1c",
                "namespace": "kube-system",
                "uid": "e52e270c-a20d-44fe-bbd9-3f53432863c5",
                "resourceVersion": "4050",
                "creationTimestamp": "2023-07-02T13:57:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "0818f4b1a57de9c3f9c82667e7fcc870",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:01Z",
            "lastTimestamp": "2023-07-02T13:57:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.176e119082d64aa8",
                "namespace": "kube-system",
                "uid": "a0c62b40-433c-4e11-8d32-3913a8fbcf9a",
                "resourceVersion": "4056",
                "creationTimestamp": "2023-07-02T13:57:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "0818f4b1a57de9c3f9c82667e7fcc870",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-scheduler:v1.26.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:02Z",
            "lastTimestamp": "2023-07-02T13:57:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.176e119099b44c0c",
                "namespace": "kube-system",
                "uid": "d3f4dc69-69d8-41e3-91e8-51e84b1d89d4",
                "resourceVersion": "4061",
                "creationTimestamp": "2023-07-02T13:57:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "0818f4b1a57de9c3f9c82667e7fcc870",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Created",
            "message": "Created container kube-scheduler",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:03Z",
            "lastTimestamp": "2023-07-02T13:57:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.176e1190d04132e4",
                "namespace": "kube-system",
                "uid": "31e40f8d-2042-4cf2-93e1-b2913ca4cfe8",
                "resourceVersion": "4064",
                "creationTimestamp": "2023-07-02T13:57:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "0818f4b1a57de9c3f9c82667e7fcc870",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Started",
            "message": "Started container kube-scheduler",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:03Z",
            "lastTimestamp": "2023-07-02T13:57:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "storage-provisioner.176e11928e5de5a0",
                "namespace": "kube-system",
                "uid": "1c6eda5d-8481-459b-abbf-f41f90d31ae0",
                "resourceVersion": "4078",
                "creationTimestamp": "2023-07-02T13:57:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "a4105b7a-e3b7-4e91-a485-2643d61bb227",
                "apiVersion": "v1",
                "resourceVersion": "392"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:11Z",
            "lastTimestamp": "2023-07-02T13:57:11Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "storage-provisioner.176e119336810f3c",
                "namespace": "kube-system",
                "uid": "304d6e65-0700-403f-a978-a53e95155ac5",
                "resourceVersion": "4143",
                "creationTimestamp": "2023-07-02T13:57:19Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "a4105b7a-e3b7-4e91-a485-2643d61bb227",
                "apiVersion": "v1",
                "resourceVersion": "392",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "Pulled",
            "message": "Container image \"gcr.io/k8s-minikube/storage-provisioner:v5\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:14Z",
            "lastTimestamp": "2023-07-02T13:57:35Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "storage-provisioner.176e11935f056d04",
                "namespace": "kube-system",
                "uid": "c3704f49-bd3a-40e0-8cb1-9caf2cdb0842",
                "resourceVersion": "4144",
                "creationTimestamp": "2023-07-02T13:57:19Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "a4105b7a-e3b7-4e91-a485-2643d61bb227",
                "apiVersion": "v1",
                "resourceVersion": "392",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "Created",
            "message": "Created container storage-provisioner",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:14Z",
            "lastTimestamp": "2023-07-02T13:57:35Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "storage-provisioner.176e1193adf91b40",
                "namespace": "kube-system",
                "uid": "fabe2472-ecbe-4965-94d5-7661c731e7aa",
                "resourceVersion": "4145",
                "creationTimestamp": "2023-07-02T13:57:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "a4105b7a-e3b7-4e91-a485-2643d61bb227",
                "apiVersion": "v1",
                "resourceVersion": "392",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "Started",
            "message": "Started container storage-provisioner",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:16Z",
            "lastTimestamp": "2023-07-02T13:57:35Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "storage-provisioner.176e1194b3a1fe80",
                "namespace": "kube-system",
                "uid": "1c69eedc-f085-461e-8919-44b5c82040dc",
                "resourceVersion": "4120",
                "creationTimestamp": "2023-07-02T13:57:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "a4105b7a-e3b7-4e91-a485-2643d61bb227",
                "apiVersion": "v1",
                "resourceVersion": "392",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "BackOff",
            "message": "Back-off restarting failed container storage-provisioner in pod storage-provisioner_kube-system(a4105b7a-e3b7-4e91-a485-2643d61bb227)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:20Z",
            "lastTimestamp": "2023-07-02T13:57:22Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "af8a2a11-ce22-4df1-9d53-62cfb46e74dd",
                "resourceVersion": "234",
                "creationTimestamp": "2023-07-01T21:05:24Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "a438b504-be3a-48c6-a717-ab58ea73c97b",
                "resourceVersion": "4058",
                "generation": 1,
                "creationTimestamp": "2023-07-01T21:05:24Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.26.3",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "cdae5970-a3bb-424d-82a4-46606b18b746",
                "resourceVersion": "4136",
                "generation": 3,
                "creationTimestamp": "2023-07-01T21:05:24Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 3,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2023-07-01T21:05:38Z",
                        "lastTransitionTime": "2023-07-01T21:05:38Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-07-01T21:05:41Z",
                        "lastTransitionTime": "2023-07-01T21:05:38Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-787d4945fb\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-787d4945fb",
                "namespace": "kube-system",
                "uid": "adc60556-efc4-4c09-90fd-c5eb78a0d8b3",
                "resourceVersion": "378",
                "generation": 1,
                "creationTimestamp": "2023-07-01T21:05:38Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "787d4945fb"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "cdae5970-a3bb-424d-82a4-46606b18b746",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "787d4945fb"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "787d4945fb"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-787d4945fb-zx5fr",
                "generateName": "coredns-787d4945fb-",
                "namespace": "kube-system",
                "uid": "5fd9a29a-1746-42b5-b48e-216558785959",
                "resourceVersion": "4117",
                "creationTimestamp": "2023-07-01T21:05:38Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "787d4945fb"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-787d4945fb",
                        "uid": "adc60556-efc4-4c09-90fd-c5eb78a0d8b3",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-q54qm",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-q54qm",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "minikube",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:05:38Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:23Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:23Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:05:38Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "10.244.0.13",
                "podIPs": [
                    {
                        "ip": "10.244.0.13"
                    }
                ],
                "startTime": "2023-07-01T21:05:38Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2023-07-02T13:57:17Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2023-07-01T21:05:40Z",
                                "finishedAt": "2023-07-02T13:56:41Z",
                                "containerID": "docker://c29ed2e3bc26eb61c85dd2a4d0631f8a5e6e1825408fd701cbb5f0b2a718bc09"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                        "imageID": "docker-pullable://registry.k8s.io/coredns/coredns@sha256:8e352a029d304ca7431c6507b56800636c321cb52289686a581ab70aaa8a2e2a",
                        "containerID": "docker://a4725efa529d33c9dfeeeaccb5f8eb3dbf853dccf5faf33699bca9cac8ea95c0",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-minikube",
                "namespace": "kube-system",
                "uid": "c87d99ff-3095-4f41-bbbf-1d882b0d4051",
                "resourceVersion": "4087",
                "creationTimestamp": "2023-07-01T21:05:25Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://192.168.49.2:2379",
                    "kubernetes.io/config.hash": "a121e106627e5c6efa9ba48006cc43bf",
                    "kubernetes.io/config.mirror": "a121e106627e5c6efa9ba48006cc43bf",
                    "kubernetes.io/config.seen": "2023-07-01T21:05:24.693457500Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "e7a6443f-e718-4a63-b3e4-11ed922848cd",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/var/lib/minikube/certs/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/minikube/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.5.6-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://192.168.49.2:2379",
                            "--cert-file=/var/lib/minikube/certs/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/minikube/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://192.168.49.2:2380",
                            "--initial-cluster=minikube=https://192.168.49.2:2380",
                            "--key-file=/var/lib/minikube/certs/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://192.168.49.2:2380",
                            "--name=minikube",
                            "--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/var/lib/minikube/certs/etcd/peer.key",
                            "--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt",
                            "--proxy-refresh-interval=70000",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/minikube/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/var/lib/minikube/certs/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health?exclude=NOSPACE\u0026serializable=true",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health?serializable=false",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:01Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:18Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:18Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:01Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-07-02T13:57:01Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2023-07-02T13:57:03Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2023-07-01T21:05:18Z",
                                "finishedAt": "2023-07-02T13:56:41Z",
                                "containerID": "docker://9740959c8babb5b844d0d38626daf0184f26335d01b59b94e73b551d1ea5c738"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "registry.k8s.io/etcd:3.5.6-0",
                        "imageID": "docker-pullable://registry.k8s.io/etcd@sha256:dd75ec974b0a2a6f6bb47001ba09207976e625db898d1b16735528c009cb171c",
                        "containerID": "docker://3ff0757034f9c4188723190b0b66b56f4a4f9229d05dde1b035784d28f69cacd",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube",
                "namespace": "kube-system",
                "uid": "a62412d9-acd1-4792-ada3-443d00f20ea9",
                "resourceVersion": "4059",
                "creationTimestamp": "2023-07-01T21:05:22Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "192.168.49.2:8443",
                    "kubernetes.io/config.hash": "cdcbce216c62c4407ac9a51ac013e7d7",
                    "kubernetes.io/config.mirror": "cdcbce216c62c4407ac9a51ac013e7d7",
                    "kubernetes.io/config.seen": "2023-07-01T21:05:17.611915200Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "e7a6443f-e718-4a63-b3e4-11ed922848cd",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/var/lib/minikube/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.26.3",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=192.168.49.2",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt",
                            "--etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt",
                            "--proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--secure-port=8443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/var/lib/minikube/certs/sa.pub",
                            "--service-account-signing-key-file=/var/lib/minikube/certs/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--tls-cert-file=/var/lib/minikube/certs/apiserver.crt",
                            "--tls-private-key-file=/var/lib/minikube/certs/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/var/lib/minikube/certs"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 8443,
                                "host": "192.168.49.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 8443,
                                "host": "192.168.49.2",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 8443,
                                "host": "192.168.49.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:05:26Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:14Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:14Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:05:26Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-07-01T21:05:26Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2023-07-02T13:57:03Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2023-07-01T21:05:18Z",
                                "finishedAt": "2023-07-02T13:56:41Z",
                                "containerID": "docker://5fd3d70a3999b5abc9566ccd0ad3c3e48a0fb2c5739aa5b19c28864a5ac85177"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "registry.k8s.io/kube-apiserver:v1.26.3",
                        "imageID": "docker-pullable://registry.k8s.io/kube-apiserver@sha256:b8dda58b0c680898b6ab7fdbd035a75065d3607a70c3c4986bc1d8cfba5f0ec8",
                        "containerID": "docker://a21c8d8d86c352dea15fb6a957ca26c6481ce1de7247542e6790fdfd51983015",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube",
                "namespace": "kube-system",
                "uid": "a6dd0d45-3436-40ae-a820-15fc19fe4bd4",
                "resourceVersion": "4071",
                "creationTimestamp": "2023-07-01T21:05:25Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "466b9e73e627277a8c24637c2fa6442d",
                    "kubernetes.io/config.mirror": "466b9e73e627277a8c24637c2fa6442d",
                    "kubernetes.io/config.seen": "2023-07-01T21:05:24.693455200Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "e7a6443f-e718-4a63-b3e4-11ed922848cd",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/var/lib/minikube/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.26.3",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=mk",
                            "--cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt",
                            "--cluster-signing-key-file=/var/lib/minikube/certs/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=false",
                            "--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt",
                            "--root-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--service-account-private-key-file=/var/lib/minikube/certs/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/var/lib/minikube/certs"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:05:25Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:17Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:17Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:05:25Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-07-01T21:05:25Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2023-07-02T13:57:03Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2023-07-01T21:05:18Z",
                                "finishedAt": "2023-07-02T13:56:41Z",
                                "containerID": "docker://22ecda75277108a99253fe62c1a32e2ac1601f85806ba61669c85f0110261c19"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "registry.k8s.io/kube-controller-manager:v1.26.3",
                        "imageID": "docker-pullable://registry.k8s.io/kube-controller-manager@sha256:28c0deb96fd861af5560b7e24b989a5d61f4a4b8467852d6975bf2a3a5217840",
                        "containerID": "docker://fca6540aab2d9b2b5948476307611e2f58a874eb28aeebb072dbecc2b4aa7be9",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-48r22",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "e851a316-875d-42af-a2c3-f49906f1644e",
                "resourceVersion": "4080",
                "creationTimestamp": "2023-07-01T21:05:38Z",
                "labels": {
                    "controller-revision-hash": "5cbfdcddd5",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "a438b504-be3a-48c6-a717-ab58ea73c97b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-w86bp",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.26.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-w86bp",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "minikube"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:05:38Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:17Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:17Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:05:38Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-07-01T21:05:38Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-07-02T13:57:17Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2023-07-01T21:05:39Z",
                                "finishedAt": "2023-07-02T13:56:41Z",
                                "containerID": "docker://d588c4177e7655bffd62a33e1668f170c4e180084fdea463e1a70183d3eb9360"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "registry.k8s.io/kube-proxy:v1.26.3",
                        "imageID": "docker-pullable://registry.k8s.io/kube-proxy@sha256:d89b6c6a8ecc920753df713b268b0d226f795135c4a0ecc5ce61660e623dd6da",
                        "containerID": "docker://2c092943a941380f539c95acee2023a53e101a4c072a7b3a88992711e4a7c2f5",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube",
                "namespace": "kube-system",
                "uid": "79151965-2ef1-442a-a6b6-d0a28ab772d0",
                "resourceVersion": "4067",
                "creationTimestamp": "2023-07-01T21:05:25Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "0818f4b1a57de9c3f9c82667e7fcc870",
                    "kubernetes.io/config.mirror": "0818f4b1a57de9c3f9c82667e7fcc870",
                    "kubernetes.io/config.seen": "2023-07-01T21:05:24.693456600Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "e7a6443f-e718-4a63-b3e4-11ed922848cd",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.26.3",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=false"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:01Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:17Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:17Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:01Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-07-02T13:57:01Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2023-07-02T13:57:03Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2023-07-01T21:05:18Z",
                                "finishedAt": "2023-07-02T13:56:41Z",
                                "containerID": "docker://7cd08d65002b5f2852b6dbbf290d845c4932c4b5796180f2ddea9e1b5e0901a4"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "registry.k8s.io/kube-scheduler:v1.26.3",
                        "imageID": "docker-pullable://registry.k8s.io/kube-scheduler@sha256:ef87c0880906a21ba55392e4c28bb75a526dd1e295e423f73e67dfc48e0c345c",
                        "containerID": "docker://686465ee89790641dde7b99a8d3b4afa6a0e823252c36b3028413e652f9f7e48",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "storage-provisioner",
                "namespace": "kube-system",
                "uid": "a4105b7a-e3b7-4e91-a485-2643d61bb227",
                "resourceVersion": "4146",
                "creationTimestamp": "2023-07-01T21:05:26Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "integration-test": "storage-provisioner"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"integration-test\":\"storage-provisioner\"},\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"containers\":[{\"command\":[\"/storage-provisioner\"],\"image\":\"gcr.io/k8s-minikube/storage-provisioner:v5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"storage-provisioner\",\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"hostNetwork\":true,\"serviceAccountName\":\"storage-provisioner\",\"volumes\":[{\"hostPath\":{\"path\":\"/tmp\",\"type\":\"Directory\"},\"name\":\"tmp\"}]}}\n"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "hostPath": {
                            "path": "/tmp",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-95c6s",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "storage-provisioner",
                        "image": "gcr.io/k8s-minikube/storage-provisioner:v5",
                        "command": [
                            "/storage-provisioner"
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-95c6s",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "storage-provisioner",
                "serviceAccount": "storage-provisioner",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:05:38Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:36Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:36Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:05:38Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-07-01T21:05:38Z",
                "containerStatuses": [
                    {
                        "name": "storage-provisioner",
                        "state": {
                            "running": {
                                "startedAt": "2023-07-02T13:57:35Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 1,
                                "reason": "Error",
                                "startedAt": "2023-07-02T13:57:16Z",
                                "finishedAt": "2023-07-02T13:57:17Z",
                                "containerID": "docker://fc5bfc3311ea2c55ce0f49914b77ec632c6c3a8dc6cfbd1b92debaf01f728417"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "gcr.io/k8s-minikube/storage-provisioner:v5",
                        "imageID": "docker-pullable://gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944",
                        "containerID": "docker://825b7fb6b3d25ef779206397f36ea5ab14947411dfe370582fdcf2552c61c3c6",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-787d4945fb-zx5fr ====
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/ready: Still waiting on: "kubernetes"
.:53
[INFO] plugin/reload: Running configuration SHA512 = 8846d9ca81164c00fa03e78dfcf1a6846552cc49335bc010218794b8cfaf537759aa4b596e7dc20c0f618e8eb07603c0139662b99dfa3de45b176fbe7fb57ce1
CoreDNS-1.9.3
linux/amd64, go1.18.2, 45b0a11
[INFO] 127.0.0.1:48235 - 18935 "HINFO IN 656648449147986133.2365477713589806839. udp 56 false 512" NXDOMAIN qr,rd,ra 56 0.4773411s
==== END logs for container coredns of pod kube-system/coredns-787d4945fb-zx5fr ====
==== START logs for container etcd of pod kube-system/etcd-minikube ====
{"level":"info","ts":"2023-07-02T13:57:04.153Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"info","ts":"2023-07-02T13:57:04.155Z","caller":"etcdmain/etcd.go:116","msg":"server has been already initialized","data-dir":"/var/lib/minikube/etcd","dir-type":"member"}
{"level":"info","ts":"2023-07-02T13:57:04.155Z","caller":"embed/etcd.go:124","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-07-02T13:57:04.156Z","caller":"embed/etcd.go:484","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-07-02T13:57:04.158Z","caller":"embed/etcd.go:132","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2023-07-02T13:57:04.158Z","caller":"embed/etcd.go:306","msg":"starting an etcd server","etcd-version":"3.5.6","git-sha":"cecbe35ce","go-version":"go1.16.15","go-os":"linux","go-arch":"amd64","max-cpu-set":8,"max-cpu-available":8,"member-initialized":true,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"","initial-cluster-state":"new","initial-cluster-token":"","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2023-07-02T13:57:04.174Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"15.4679ms"}
{"level":"info","ts":"2023-07-02T13:57:04.199Z","caller":"etcdserver/server.go:530","msg":"No snapshot found. Recovering WAL from scratch!"}
{"level":"info","ts":"2023-07-02T13:57:04.220Z","caller":"etcdserver/raft.go:529","msg":"restarting local member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","commit-index":4867}
{"level":"info","ts":"2023-07-02T13:57:04.221Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2023-07-02T13:57:04.221Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 2"}
{"level":"info","ts":"2023-07-02T13:57:04.221Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 2, commit: 4867, applied: 0, lastindex: 4867, lastterm: 2]"}
{"level":"warn","ts":"2023-07-02T13:57:04.223Z","caller":"auth/store.go:1234","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-07-02T13:57:04.225Z","caller":"mvcc/kvstore.go:323","msg":"restored last compact revision","meta-bucket-name":"meta","meta-bucket-name-key":"finishedCompactRev","restored-compact-revision":3625}
{"level":"info","ts":"2023-07-02T13:57:04.228Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":4006}
{"level":"info","ts":"2023-07-02T13:57:04.230Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-07-02T13:57:04.233Z","caller":"etcdserver/corrupt.go:95","msg":"starting initial corruption check","local-member-id":"aec36adc501070cc","timeout":"7s"}
{"level":"info","ts":"2023-07-02T13:57:04.233Z","caller":"etcdserver/corrupt.go:165","msg":"initial corruption checking passed; no corruption","local-member-id":"aec36adc501070cc"}
{"level":"info","ts":"2023-07-02T13:57:04.233Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.6","cluster-version":"to_be_decided"}
{"level":"info","ts":"2023-07-02T13:57:04.234Z","caller":"etcdserver/server.go:754","msg":"starting initial election tick advance","election-ticks":10}
{"level":"info","ts":"2023-07-02T13:57:04.234Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2023-07-02T13:57:04.234Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2023-07-02T13:57:04.234Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2023-07-02T13:57:04.234Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2023-07-02T13:57:04.234Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-07-02T13:57:04.234Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2023-07-02T13:57:04.234Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-07-02T13:57:04.236Z","caller":"embed/etcd.go:687","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-07-02T13:57:04.236Z","caller":"embed/etcd.go:586","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-07-02T13:57:04.236Z","caller":"embed/etcd.go:275","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-07-02T13:57:04.236Z","caller":"embed/etcd.go:558","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-07-02T13:57:04.236Z","caller":"embed/etcd.go:762","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-07-02T13:57:05.959Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 2"}
{"level":"info","ts":"2023-07-02T13:57:05.959Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 2"}
{"level":"info","ts":"2023-07-02T13:57:05.960Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2023-07-02T13:57:05.960Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 3"}
{"level":"info","ts":"2023-07-02T13:57:05.960Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 3"}
{"level":"info","ts":"2023-07-02T13:57:05.960Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 3"}
{"level":"info","ts":"2023-07-02T13:57:05.960Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 3"}
{"level":"info","ts":"2023-07-02T13:57:05.974Z","caller":"etcdserver/server.go:2054","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2023-07-02T13:57:05.975Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-07-02T13:57:05.975Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-07-02T13:57:05.976Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-07-02T13:57:05.976Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2023-07-02T13:57:05.984Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"192.168.49.2:2379"}
{"level":"info","ts":"2023-07-02T13:57:05.984Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-07-02T13:57:11.864Z","caller":"traceutil/trace.go:171","msg":"trace[1370454561] transaction","detail":"{read_only:false; response_revision:4022; number_of_response:1; }","duration":"179.1505ms","start":"2023-07-02T13:57:11.685Z","end":"2023-07-02T13:57:11.864Z","steps":["trace[1370454561] 'process raft request'  (duration: 174.6224ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:11.868Z","caller":"traceutil/trace.go:171","msg":"trace[272616707] transaction","detail":"{read_only:false; response_revision:4023; number_of_response:1; }","duration":"182.1199ms","start":"2023-07-02T13:57:11.686Z","end":"2023-07-02T13:57:11.868Z","steps":["trace[272616707] 'process raft request'  (duration: 181.3266ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:12.181Z","caller":"traceutil/trace.go:171","msg":"trace[1076969196] transaction","detail":"{read_only:false; response_revision:4025; number_of_response:1; }","duration":"105.3956ms","start":"2023-07-02T13:57:12.075Z","end":"2023-07-02T13:57:12.180Z","steps":["trace[1076969196] 'process raft request'  (duration: 101.63ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:13.184Z","caller":"traceutil/trace.go:171","msg":"trace[1013950017] transaction","detail":"{read_only:false; response_revision:4035; number_of_response:1; }","duration":"103.3698ms","start":"2023-07-02T13:57:13.080Z","end":"2023-07-02T13:57:13.184Z","steps":["trace[1013950017] 'process raft request'  (duration: 89.4073ms)","trace[1013950017] 'compare'  (duration: 13.7248ms)"],"step_count":2}
{"level":"info","ts":"2023-07-02T13:57:13.673Z","caller":"traceutil/trace.go:171","msg":"trace[257051144] transaction","detail":"{read_only:false; response_revision:4038; number_of_response:1; }","duration":"191.6066ms","start":"2023-07-02T13:57:13.482Z","end":"2023-07-02T13:57:13.673Z","steps":["trace[257051144] 'process raft request'  (duration: 181.9682ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:13.685Z","caller":"traceutil/trace.go:171","msg":"trace[268351018] transaction","detail":"{read_only:false; number_of_response:0; response_revision:4038; }","duration":"125.1302ms","start":"2023-07-02T13:57:13.560Z","end":"2023-07-02T13:57:13.685Z","steps":["trace[268351018] 'process raft request'  (duration: 123.9291ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:13.874Z","caller":"traceutil/trace.go:171","msg":"trace[1939367395] transaction","detail":"{read_only:false; response_revision:4040; number_of_response:1; }","duration":"105.5048ms","start":"2023-07-02T13:57:13.768Z","end":"2023-07-02T13:57:13.873Z","steps":["trace[1939367395] 'process raft request'  (duration: 13.4864ms)","trace[1939367395] 'compare'  (duration: 91.5409ms)"],"step_count":2}
{"level":"info","ts":"2023-07-02T13:57:13.874Z","caller":"traceutil/trace.go:171","msg":"trace[1703295871] linearizableReadLoop","detail":"{readStateIndex:4907; appliedIndex:4906; }","duration":"104.7148ms","start":"2023-07-02T13:57:13.769Z","end":"2023-07-02T13:57:13.874Z","steps":["trace[1703295871] 'read index received'  (duration: 12.7874ms)","trace[1703295871] 'applied index is now lower than readState.Index'  (duration: 91.9202ms)"],"step_count":2}
{"level":"warn","ts":"2023-07-02T13:57:13.875Z","caller":"etcdserver/util.go:166","msg":"apply request took too long","took":"105.5986ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/kube-system/kube-proxy-48r22\" ","response":"range_response_count:1 size:4418"}
{"level":"info","ts":"2023-07-02T13:57:13.875Z","caller":"traceutil/trace.go:171","msg":"trace[223236216] range","detail":"{range_begin:/registry/pods/kube-system/kube-proxy-48r22; range_end:; response_count:1; response_revision:4040; }","duration":"105.8751ms","start":"2023-07-02T13:57:13.769Z","end":"2023-07-02T13:57:13.875Z","steps":["trace[223236216] 'agreement among raft nodes before linearized reading'  (duration: 105.32ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:14.175Z","caller":"traceutil/trace.go:171","msg":"trace[2138934877] linearizableReadLoop","detail":"{readStateIndex:4910; appliedIndex:4909; }","duration":"103.9094ms","start":"2023-07-02T13:57:14.071Z","end":"2023-07-02T13:57:14.175Z","steps":["trace[2138934877] 'read index received'  (duration: 88.4811ms)","trace[2138934877] 'applied index is now lower than readState.Index'  (duration: 15.4226ms)"],"step_count":2}
{"level":"info","ts":"2023-07-02T13:57:14.175Z","caller":"traceutil/trace.go:171","msg":"trace[158263613] transaction","detail":"{read_only:false; response_revision:4042; number_of_response:1; }","duration":"104.5638ms","start":"2023-07-02T13:57:14.071Z","end":"2023-07-02T13:57:14.175Z","steps":["trace[158263613] 'process raft request'  (duration: 89.1266ms)","trace[158263613] 'compare'  (duration: 14.9313ms)"],"step_count":2}
{"level":"warn","ts":"2023-07-02T13:57:14.176Z","caller":"etcdserver/util.go:166","msg":"apply request took too long","took":"101.4318ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/clusterrolebindings/system:coredns\" ","response":"range_response_count:1 size:415"}
{"level":"warn","ts":"2023-07-02T13:57:14.176Z","caller":"etcdserver/util.go:166","msg":"apply request took too long","took":"104.4521ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/events/default/minikube.176e119030083cb4\" ","response":"range_response_count:1 size:591"}
{"level":"info","ts":"2023-07-02T13:57:14.176Z","caller":"traceutil/trace.go:171","msg":"trace[342931203] range","detail":"{range_begin:/registry/events/default/minikube.176e119030083cb4; range_end:; response_count:1; response_revision:4042; }","duration":"104.6151ms","start":"2023-07-02T13:57:14.071Z","end":"2023-07-02T13:57:14.176Z","steps":["trace[342931203] 'agreement among raft nodes before linearized reading'  (duration: 104.2275ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:14.176Z","caller":"traceutil/trace.go:171","msg":"trace[1667186613] range","detail":"{range_begin:/registry/clusterrolebindings/system:coredns; range_end:; response_count:1; response_revision:4042; }","duration":"101.5518ms","start":"2023-07-02T13:57:14.074Z","end":"2023-07-02T13:57:14.176Z","steps":["trace[1667186613] 'agreement among raft nodes before linearized reading'  (duration: 101.2408ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:14.365Z","caller":"traceutil/trace.go:171","msg":"trace[1348064684] transaction","detail":"{read_only:false; response_revision:4043; number_of_response:1; }","duration":"184.128ms","start":"2023-07-02T13:57:14.181Z","end":"2023-07-02T13:57:14.365Z","steps":["trace[1348064684] 'process raft request'  (duration: 178.3487ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:14.562Z","caller":"traceutil/trace.go:171","msg":"trace[1221216094] transaction","detail":"{read_only:false; number_of_response:0; response_revision:4044; }","duration":"101.7852ms","start":"2023-07-02T13:57:14.460Z","end":"2023-07-02T13:57:14.562Z","steps":["trace[1221216094] 'process raft request'  (duration: 100.6733ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:14.762Z","caller":"traceutil/trace.go:171","msg":"trace[1311069430] transaction","detail":"{read_only:false; response_revision:4046; number_of_response:1; }","duration":"171.0444ms","start":"2023-07-02T13:57:14.591Z","end":"2023-07-02T13:57:14.762Z","steps":["trace[1311069430] 'process raft request'  (duration: 82.5709ms)","trace[1311069430] 'compare'  (duration: 88.1135ms)"],"step_count":2}
{"level":"info","ts":"2023-07-02T13:57:15.072Z","caller":"traceutil/trace.go:171","msg":"trace[541955728] transaction","detail":"{read_only:false; number_of_response:0; response_revision:4048; }","duration":"208.4081ms","start":"2023-07-02T13:57:14.863Z","end":"2023-07-02T13:57:15.072Z","steps":["trace[541955728] 'process raft request'  (duration: 196.4158ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:15.072Z","caller":"traceutil/trace.go:171","msg":"trace[353274178] transaction","detail":"{read_only:false; response_revision:4049; number_of_response:1; }","duration":"198.8904ms","start":"2023-07-02T13:57:14.873Z","end":"2023-07-02T13:57:15.072Z","steps":["trace[353274178] 'process raft request'  (duration: 197.7067ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:15.372Z","caller":"traceutil/trace.go:171","msg":"trace[843237953] transaction","detail":"{read_only:false; response_revision:4052; number_of_response:1; }","duration":"187.2822ms","start":"2023-07-02T13:57:15.185Z","end":"2023-07-02T13:57:15.372Z","steps":["trace[843237953] 'process raft request'  (duration: 174.3948ms)","trace[843237953] 'get key's previous created_revision and leaseID' {req_type:put; key:/registry/pods/kube-system/etcd-minikube; req_size:5415; } (duration: 12.1915ms)"],"step_count":2}
{"level":"info","ts":"2023-07-02T13:57:15.373Z","caller":"traceutil/trace.go:171","msg":"trace[1409981946] transaction","detail":"{read_only:false; response_revision:4053; number_of_response:1; }","duration":"100.7037ms","start":"2023-07-02T13:57:15.272Z","end":"2023-07-02T13:57:15.372Z","steps":["trace[1409981946] 'process raft request'  (duration: 100.071ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:15.761Z","caller":"traceutil/trace.go:171","msg":"trace[1994151814] transaction","detail":"{read_only:false; response_revision:4055; number_of_response:1; }","duration":"174.8641ms","start":"2023-07-02T13:57:15.586Z","end":"2023-07-02T13:57:15.761Z","steps":["trace[1994151814] 'process raft request'  (duration: 173.4652ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:15.779Z","caller":"traceutil/trace.go:171","msg":"trace[1010266522] transaction","detail":"{read_only:false; response_revision:4056; number_of_response:1; }","duration":"102.4151ms","start":"2023-07-02T13:57:15.676Z","end":"2023-07-02T13:57:15.778Z","steps":["trace[1010266522] 'process raft request'  (duration: 101.9893ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:16.161Z","caller":"traceutil/trace.go:171","msg":"trace[1701845231] transaction","detail":"{read_only:false; response_revision:4059; number_of_response:1; }","duration":"100.9389ms","start":"2023-07-02T13:57:16.060Z","end":"2023-07-02T13:57:16.161Z","steps":["trace[1701845231] 'process raft request'  (duration: 20.3882ms)","trace[1701845231] 'compare'  (duration: 79.4608ms)"],"step_count":2}
{"level":"info","ts":"2023-07-02T13:57:19.784Z","caller":"traceutil/trace.go:171","msg":"trace[796601702] linearizableReadLoop","detail":"{readStateIndex:4964; appliedIndex:4962; }","duration":"101.775ms","start":"2023-07-02T13:57:19.682Z","end":"2023-07-02T13:57:19.784Z","steps":["trace[796601702] 'read index received'  (duration: 82.5605ms)","trace[796601702] 'applied index is now lower than readState.Index'  (duration: 19.2101ms)"],"step_count":2}
{"level":"warn","ts":"2023-07-02T13:57:19.784Z","caller":"etcdserver/util.go:166","msg":"apply request took too long","took":"102.2242ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2023-07-02T13:57:19.784Z","caller":"traceutil/trace.go:171","msg":"trace[406106765] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:4088; }","duration":"102.3368ms","start":"2023-07-02T13:57:19.682Z","end":"2023-07-02T13:57:19.784Z","steps":["trace[406106765] 'agreement among raft nodes before linearized reading'  (duration: 102.1078ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:19.785Z","caller":"traceutil/trace.go:171","msg":"trace[1642946353] transaction","detail":"{read_only:false; response_revision:4088; number_of_response:1; }","duration":"106.2616ms","start":"2023-07-02T13:57:19.679Z","end":"2023-07-02T13:57:19.785Z","steps":["trace[1642946353] 'process raft request'  (duration: 98.9167ms)"],"step_count":1}
{"level":"info","ts":"2023-07-02T13:57:24.261Z","caller":"traceutil/trace.go:171","msg":"trace[1832423479] transaction","detail":"{read_only:false; response_revision:4120; number_of_response:1; }","duration":"176.5021ms","start":"2023-07-02T13:57:24.084Z","end":"2023-07-02T13:57:24.261Z","steps":["trace[1832423479] 'process raft request'  (duration: 86.5883ms)","trace[1832423479] 'store kv pair into bolt db' {req_type:put; key:/registry/events/kube-system/storage-provisioner.176e1194b3a1fe80; req_size:760; } (duration: 89.1585ms)"],"step_count":2}
{"level":"warn","ts":"2023-07-02T13:59:30.360Z","caller":"etcdserver/util.go:166","msg":"apply request took too long","took":"100.2187ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/kubernetes-dashboard/kubernetes-dashboard-55c4cbbc7c-v9mf7\" ","response":"range_response_count:1 size:3987"}
{"level":"info","ts":"2023-07-02T13:59:30.361Z","caller":"traceutil/trace.go:171","msg":"trace[426956014] range","detail":"{range_begin:/registry/pods/kubernetes-dashboard/kubernetes-dashboard-55c4cbbc7c-v9mf7; range_end:; response_count:1; response_revision:4254; }","duration":"100.4385ms","start":"2023-07-02T13:59:30.260Z","end":"2023-07-02T13:59:30.360Z","steps":["trace[426956014] 'range keys from in-memory index tree'  (duration: 99.8124ms)"],"step_count":1}
{"level":"warn","ts":"2023-07-02T13:59:30.362Z","caller":"etcdserver/util.go:166","msg":"apply request took too long","took":"101.9451ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/events/default/\" range_end:\"/registry/events/default0\" ","response":"range_response_count:74 size:52851"}
{"level":"info","ts":"2023-07-02T13:59:30.362Z","caller":"traceutil/trace.go:171","msg":"trace[1233707996] range","detail":"{range_begin:/registry/events/default/; range_end:/registry/events/default0; response_count:74; response_revision:4254; }","duration":"102.0907ms","start":"2023-07-02T13:59:30.260Z","end":"2023-07-02T13:59:30.362Z","steps":["trace[1233707996] 'range keys from in-memory index tree'  (duration: 100.7259ms)"],"step_count":1}
{"level":"warn","ts":"2023-07-02T14:01:03.570Z","caller":"etcdserver/util.go:166","msg":"apply request took too long","took":"104.9496ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/pods/kubernetes-dashboard/dashboard-metrics-scraper-5c6664855-dc97k\" ","response":"range_response_count:1 size:4031"}
{"level":"info","ts":"2023-07-02T14:01:03.570Z","caller":"traceutil/trace.go:171","msg":"trace[2091567217] range","detail":"{range_begin:/registry/pods/kubernetes-dashboard/dashboard-metrics-scraper-5c6664855-dc97k; range_end:; response_count:1; response_revision:4377; }","duration":"105.2061ms","start":"2023-07-02T14:01:03.465Z","end":"2023-07-02T14:01:03.570Z","steps":["trace[2091567217] 'range keys from in-memory index tree'  (duration: 104.6168ms)"],"step_count":1}
==== END logs for container etcd of pod kube-system/etcd-minikube ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-minikube ====
I0702 13:57:04.797907       1 server.go:555] external host was not specified, using 192.168.49.2
I0702 13:57:04.800371       1 server.go:163] Version: v1.26.3
I0702 13:57:04.800433       1 server.go:165] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0702 13:57:07.020980       1 shared_informer.go:273] Waiting for caches to sync for node_authorizer
I0702 13:57:07.022689       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0702 13:57:07.022721       1 plugins.go:161] Loaded 12 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionPolicy,ValidatingAdmissionWebhook,ResourceQuota.
W0702 13:57:07.075764       1 genericapiserver.go:660] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I0702 13:57:07.077448       1 instance.go:277] Using reconciler: lease
I0702 13:57:07.277063       1 instance.go:621] API group "internal.apiserver.k8s.io" is not enabled, skipping.
I0702 13:57:08.050444       1 instance.go:621] API group "resource.k8s.io" is not enabled, skipping.
W0702 13:57:08.373745       1 genericapiserver.go:660] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.373815       1 genericapiserver.go:660] Skipping API authentication.k8s.io/v1alpha1 because it has no resources.
W0702 13:57:08.376500       1 genericapiserver.go:660] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.382139       1 genericapiserver.go:660] Skipping API autoscaling/v2beta1 because it has no resources.
W0702 13:57:08.382205       1 genericapiserver.go:660] Skipping API autoscaling/v2beta2 because it has no resources.
W0702 13:57:08.387417       1 genericapiserver.go:660] Skipping API batch/v1beta1 because it has no resources.
W0702 13:57:08.390415       1 genericapiserver.go:660] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.395629       1 genericapiserver.go:660] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.395820       1 genericapiserver.go:660] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.403955       1 genericapiserver.go:660] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.404026       1 genericapiserver.go:660] Skipping API networking.k8s.io/v1alpha1 because it has no resources.
W0702 13:57:08.406517       1 genericapiserver.go:660] Skipping API node.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.406582       1 genericapiserver.go:660] Skipping API node.k8s.io/v1alpha1 because it has no resources.
W0702 13:57:08.406673       1 genericapiserver.go:660] Skipping API policy/v1beta1 because it has no resources.
W0702 13:57:08.415571       1 genericapiserver.go:660] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.415663       1 genericapiserver.go:660] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
W0702 13:57:08.434459       1 genericapiserver.go:660] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.434502       1 genericapiserver.go:660] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
W0702 13:57:08.444725       1 genericapiserver.go:660] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
W0702 13:57:08.451850       1 genericapiserver.go:660] Skipping API flowcontrol.apiserver.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.451920       1 genericapiserver.go:660] Skipping API flowcontrol.apiserver.k8s.io/v1alpha1 because it has no resources.
W0702 13:57:08.464809       1 genericapiserver.go:660] Skipping API apps/v1beta2 because it has no resources.
W0702 13:57:08.464928       1 genericapiserver.go:660] Skipping API apps/v1beta1 because it has no resources.
W0702 13:57:08.469749       1 genericapiserver.go:660] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.469836       1 genericapiserver.go:660] Skipping API admissionregistration.k8s.io/v1alpha1 because it has no resources.
W0702 13:57:08.474015       1 genericapiserver.go:660] Skipping API events.k8s.io/v1beta1 because it has no resources.
W0702 13:57:08.505969       1 genericapiserver.go:660] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0702 13:57:09.163316       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0702 13:57:09.163489       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/var/lib/minikube/certs/apiserver.crt::/var/lib/minikube/certs/apiserver.key"
I0702 13:57:09.163579       1 secure_serving.go:210] Serving securely on [::]:8443
I0702 13:57:09.163628       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0702 13:57:09.163679       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0702 13:57:09.163745       1 available_controller.go:494] Starting AvailableConditionController
I0702 13:57:09.163756       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0702 13:57:09.163781       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0702 13:57:09.163835       1 apf_controller.go:361] Starting API Priority and Fairness config controller
I0702 13:57:09.163975       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0702 13:57:09.163987       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0702 13:57:09.164049       1 autoregister_controller.go:141] Starting autoregister controller
I0702 13:57:09.164062       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0702 13:57:09.165474       1 controller.go:121] Starting legacy_token_tracking_controller
I0702 13:57:09.165520       1 shared_informer.go:273] Waiting for caches to sync for configmaps
I0702 13:57:09.165584       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0702 13:57:09.163849       1 controller.go:83] Starting OpenAPI AggregationController
I0702 13:57:09.165713       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0702 13:57:09.165726       1 shared_informer.go:273] Waiting for caches to sync for crd-autoregister
I0702 13:57:09.166001       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0702 13:57:09.170559       1 customresource_discovery_controller.go:288] Starting DiscoveryController
I0702 13:57:09.171094       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0702 13:57:09.171128       1 shared_informer.go:273] Waiting for caches to sync for cluster_authentication_trust_controller
I0702 13:57:09.175544       1 controller.go:85] Starting OpenAPI controller
I0702 13:57:09.175629       1 controller.go:85] Starting OpenAPI V3 controller
I0702 13:57:09.175679       1 naming_controller.go:291] Starting NamingConditionController
I0702 13:57:09.175711       1 establishing_controller.go:76] Starting EstablishingController
I0702 13:57:09.175749       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0702 13:57:09.175770       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0702 13:57:09.175813       1 crd_finalizer.go:266] Starting CRDFinalizer
I0702 13:57:09.175921       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0702 13:57:09.185927       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
E0702 13:57:09.188487       1 controller.go:159] Error removing old endpoints from kubernetes service: no master IPs were listed in storage, refusing to erase all endpoints for the kubernetes service
I0702 13:57:09.263923       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0702 13:57:09.264470       1 cache.go:39] Caches are synced for autoregister controller
I0702 13:57:09.264634       1 apf_controller.go:366] Running API Priority and Fairness config worker
I0702 13:57:09.264644       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process
I0702 13:57:09.264714       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0702 13:57:09.265844       1 shared_informer.go:280] Caches are synced for crd-autoregister
I0702 13:57:09.266283       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
I0702 13:57:09.266304       1 shared_informer.go:280] Caches are synced for configmaps
I0702 13:57:09.272782       1 shared_informer.go:280] Caches are synced for cluster_authentication_trust_controller
I0702 13:57:09.359897       1 shared_informer.go:280] Caches are synced for node_authorizer
I0702 13:57:09.963137       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0702 13:57:10.168518       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0702 13:57:14.380316       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I0702 13:57:14.862408       1 controller.go:615] quota admission added evaluator for: deployments.apps
I0702 13:57:15.780639       1 controller.go:615] quota admission added evaluator for: daemonsets.apps
I0702 13:57:16.369549       1 controller.go:615] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0702 13:57:16.563506       1 controller.go:615] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0702 13:57:24.569823       1 controller.go:615] quota admission added evaluator for: endpoints
I0702 13:57:24.590088       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0702 14:00:17.997617       1 controller.go:615] quota admission added evaluator for: replicasets.apps
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-minikube ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-minikube ====
I0702 13:57:05.089531       1 serving.go:348] Generated self-signed cert in-memory
I0702 13:57:06.735527       1 controllermanager.go:182] Version: v1.26.3
I0702 13:57:06.735585       1 controllermanager.go:184] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0702 13:57:06.740857       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0702 13:57:06.740908       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0702 13:57:06.740928       1 secure_serving.go:210] Serving securely on 127.0.0.1:10257
I0702 13:57:06.741242       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0702 13:57:12.285208       1 shared_informer.go:273] Waiting for caches to sync for tokens
I0702 13:57:12.376685       1 controllermanager.go:622] Started "podgc"
I0702 13:57:12.378385       1 gc_controller.go:102] Starting GC controller
I0702 13:57:12.378464       1 shared_informer.go:273] Waiting for caches to sync for GC
I0702 13:57:12.385485       1 shared_informer.go:280] Caches are synced for tokens
I0702 13:57:12.473625       1 controllermanager.go:622] Started "garbagecollector"
I0702 13:57:12.473870       1 garbagecollector.go:154] Starting garbage collector controller
I0702 13:57:12.473882       1 shared_informer.go:273] Waiting for caches to sync for garbage collector
I0702 13:57:12.474024       1 graph_builder.go:291] GraphBuilder running
I0702 13:57:12.479820       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-serving"
I0702 13:57:12.479842       1 shared_informer.go:273] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I0702 13:57:12.479879       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I0702 13:57:12.480294       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-client"
I0702 13:57:12.480632       1 controllermanager.go:622] Started "csrsigning"
I0702 13:57:12.480850       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kube-apiserver-client"
I0702 13:57:12.480862       1 shared_informer.go:273] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I0702 13:57:12.480903       1 certificate_controller.go:112] Starting certificate controller "csrsigning-legacy-unknown"
I0702 13:57:12.480910       1 shared_informer.go:273] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I0702 13:57:12.480938       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I0702 13:57:12.480961       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I0702 13:57:12.480309       1 shared_informer.go:273] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I0702 13:57:12.481618       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I0702 13:57:12.484881       1 controllermanager.go:622] Started "tokencleaner"
I0702 13:57:12.485115       1 tokencleaner.go:111] Starting token cleaner controller
I0702 13:57:12.485129       1 shared_informer.go:273] Waiting for caches to sync for token_cleaner
I0702 13:57:12.485466       1 shared_informer.go:280] Caches are synced for token_cleaner
I0702 13:57:12.487902       1 controllermanager.go:622] Started "ttl-after-finished"
I0702 13:57:12.488247       1 ttlafterfinished_controller.go:104] Starting TTL after finished controller
I0702 13:57:12.488273       1 shared_informer.go:273] Waiting for caches to sync for TTL after finished
I0702 13:57:12.561870       1 controllermanager.go:622] Started "root-ca-cert-publisher"
I0702 13:57:12.562054       1 publisher.go:101] Starting root CA certificate configmap publisher
I0702 13:57:12.562065       1 shared_informer.go:273] Waiting for caches to sync for crt configmap
I0702 13:57:12.566329       1 controllermanager.go:622] Started "replicationcontroller"
I0702 13:57:12.566550       1 replica_set.go:201] Starting replicationcontroller controller
I0702 13:57:12.566561       1 shared_informer.go:273] Waiting for caches to sync for ReplicationController
I0702 13:57:12.570274       1 controllermanager.go:622] Started "bootstrapsigner"
I0702 13:57:12.570480       1 shared_informer.go:273] Waiting for caches to sync for bootstrap_signer
I0702 13:57:22.676311       1 range_allocator.go:109] No Secondary Service CIDR provided. Skipping filtering out secondary service addresses.
I0702 13:57:22.677116       1 controllermanager.go:622] Started "nodeipam"
I0702 13:57:22.684122       1 node_ipam_controller.go:155] Starting ipam controller
I0702 13:57:22.684180       1 shared_informer.go:273] Waiting for caches to sync for node
I0702 13:57:22.765126       1 node_lifecycle_controller.go:492] Controller will reconcile labels.
I0702 13:57:22.765448       1 controllermanager.go:622] Started "nodelifecycle"
I0702 13:57:22.766173       1 node_lifecycle_controller.go:527] Sending events to api server.
I0702 13:57:22.766286       1 node_lifecycle_controller.go:538] Starting node controller
I0702 13:57:22.766311       1 shared_informer.go:273] Waiting for caches to sync for taint
I0702 13:57:22.774874       1 controllermanager.go:622] Started "persistentvolume-expander"
I0702 13:57:22.778416       1 expand_controller.go:340] Starting expand controller
I0702 13:57:22.778561       1 shared_informer.go:273] Waiting for caches to sync for expand
I0702 13:57:22.785000       1 controllermanager.go:622] Started "replicaset"
I0702 13:57:22.785212       1 replica_set.go:201] Starting replicaset controller
I0702 13:57:22.785250       1 shared_informer.go:273] Waiting for caches to sync for ReplicaSet
I0702 13:57:22.793493       1 controllermanager.go:622] Started "job"
I0702 13:57:22.793916       1 job_controller.go:191] Starting job controller
I0702 13:57:22.859920       1 shared_informer.go:273] Waiting for caches to sync for job
I0702 13:57:22.887122       1 controllermanager.go:622] Started "disruption"
I0702 13:57:22.888309       1 disruption.go:424] Sending events to api server.
I0702 13:57:22.888577       1 disruption.go:435] Starting disruption controller
I0702 13:57:22.888607       1 shared_informer.go:273] Waiting for caches to sync for disruption
I0702 13:57:23.083358       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for horizontalpodautoscalers.autoscaling
I0702 13:57:23.083590       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for roles.rbac.authorization.k8s.io
I0702 13:57:23.083648       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for leases.coordination.k8s.io
I0702 13:57:23.083719       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for statefulsets.apps
I0702 13:57:23.083766       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for rolebindings.rbac.authorization.k8s.io
I0702 13:57:23.083855       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for endpointslices.discovery.k8s.io
I0702 13:57:23.083924       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for podtemplates
I0702 13:57:23.083981       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for csistoragecapacities.storage.k8s.io
I0702 13:57:23.084140       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for limitranges
W0702 13:57:23.084184       1 shared_informer.go:550] resyncPeriod 13h23m38.951688857s is smaller than resyncCheckPeriod 16h43m33.780655503s and the informer has already started. Changing it to 16h43m33.780655503s
I0702 13:57:23.084658       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for serviceaccounts
I0702 13:57:23.085001       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for deployments.apps
I0702 13:57:23.085186       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for jobs.batch
I0702 13:57:23.085258       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for cronjobs.batch
I0702 13:57:23.085391       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for ingresses.networking.k8s.io
I0702 13:57:23.085459       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for replicasets.apps
I0702 13:57:23.085500       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for daemonsets.apps
I0702 13:57:23.085546       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for controllerrevisions.apps
I0702 13:57:23.085707       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for networkpolicies.networking.k8s.io
I0702 13:57:23.085793       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for endpoints
I0702 13:57:23.086009       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for poddisruptionbudgets.policy
I0702 13:57:23.086172       1 controllermanager.go:622] Started "resourcequota"
I0702 13:57:23.086367       1 resource_quota_controller.go:277] Starting resource quota controller
I0702 13:57:23.086410       1 shared_informer.go:273] Waiting for caches to sync for resource quota
I0702 13:57:23.086469       1 resource_quota_monitor.go:295] QuotaMonitor running
I0702 13:57:23.196308       1 controllermanager.go:622] Started "horizontalpodautoscaling"
I0702 13:57:23.196634       1 horizontal.go:181] Starting HPA controller
I0702 13:57:23.196678       1 shared_informer.go:273] Waiting for caches to sync for HPA
I0702 13:57:23.204302       1 controllermanager.go:622] Started "endpoint"
I0702 13:57:23.204888       1 endpoints_controller.go:178] Starting endpoint controller
I0702 13:57:23.205011       1 shared_informer.go:273] Waiting for caches to sync for endpoint
I0702 13:57:23.274818       1 controllermanager.go:622] Started "attachdetach"
I0702 13:57:23.276749       1 attach_detach_controller.go:328] Starting attach detach controller
I0702 13:57:23.276808       1 shared_informer.go:273] Waiting for caches to sync for attach detach
I0702 13:57:23.285557       1 controllermanager.go:622] Started "pvc-protection"
W0702 13:57:23.285650       1 core.go:221] configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes.
W0702 13:57:23.285675       1 controllermanager.go:600] Skipping "route"
I0702 13:57:23.286036       1 pvc_protection_controller.go:99] "Starting PVC protection controller"
I0702 13:57:23.286170       1 shared_informer.go:273] Waiting for caches to sync for PVC protection
I0702 13:57:23.367360       1 controllermanager.go:622] Started "cronjob"
I0702 13:57:23.367604       1 cronjob_controllerv2.go:137] "Starting cronjob controller v2"
I0702 13:57:23.367651       1 shared_informer.go:273] Waiting for caches to sync for cronjob
I0702 13:57:23.378735       1 controllermanager.go:622] Started "csrapproving"
I0702 13:57:23.379168       1 certificate_controller.go:112] Starting certificate controller "csrapproving"
I0702 13:57:23.379204       1 shared_informer.go:273] Waiting for caches to sync for certificate-csrapproving
I0702 13:57:23.388441       1 controllermanager.go:622] Started "ttl"
I0702 13:57:23.388993       1 ttl_controller.go:120] Starting TTL controller
I0702 13:57:23.389039       1 shared_informer.go:273] Waiting for caches to sync for TTL
I0702 13:57:23.464738       1 controllermanager.go:622] Started "ephemeral-volume"
I0702 13:57:23.465366       1 controller.go:169] Starting ephemeral volume controller
I0702 13:57:23.465398       1 shared_informer.go:273] Waiting for caches to sync for ephemeral
I0702 13:57:23.475781       1 controllermanager.go:622] Started "deployment"
I0702 13:57:23.476166       1 deployment_controller.go:154] "Starting controller" controller="deployment"
I0702 13:57:23.476214       1 shared_informer.go:273] Waiting for caches to sync for deployment
I0702 13:57:23.483919       1 controllermanager.go:622] Started "serviceaccount"
I0702 13:57:23.484699       1 serviceaccounts_controller.go:111] Starting service account controller
I0702 13:57:23.484780       1 shared_informer.go:273] Waiting for caches to sync for service account
I0702 13:57:23.565748       1 controllermanager.go:622] Started "daemonset"
I0702 13:57:23.566333       1 daemon_controller.go:265] Starting daemon sets controller
I0702 13:57:23.566395       1 shared_informer.go:273] Waiting for caches to sync for daemon sets
E0702 13:57:23.576171       1 core.go:92] Failed to start service controller: WARNING: no cloud provider provided, services of type LoadBalancer will fail
W0702 13:57:23.576311       1 controllermanager.go:600] Skipping "service"
I0702 13:57:23.584580       1 controllermanager.go:622] Started "pv-protection"
I0702 13:57:23.584889       1 pv_protection_controller.go:75] Starting PV protection controller
I0702 13:57:23.584932       1 shared_informer.go:273] Waiting for caches to sync for PV protection
I0702 13:57:23.771340       1 controllermanager.go:622] Started "namespace"
I0702 13:57:23.771470       1 namespace_controller.go:195] Starting namespace controller
I0702 13:57:23.772748       1 shared_informer.go:273] Waiting for caches to sync for namespace
I0702 13:57:23.783618       1 controllermanager.go:622] Started "endpointslicemirroring"
I0702 13:57:23.784378       1 endpointslicemirroring_controller.go:211] Starting EndpointSliceMirroring controller
I0702 13:57:23.784449       1 shared_informer.go:273] Waiting for caches to sync for endpoint_slice_mirroring
I0702 13:57:23.791849       1 controllermanager.go:622] Started "statefulset"
I0702 13:57:23.793005       1 stateful_set.go:152] Starting stateful set controller
I0702 13:57:23.793108       1 shared_informer.go:273] Waiting for caches to sync for stateful set
I0702 13:57:23.866341       1 controllermanager.go:622] Started "csrcleaner"
I0702 13:57:23.866915       1 cleaner.go:82] Starting CSR cleaner controller
E0702 13:57:23.873385       1 core.go:207] failed to start cloud node lifecycle controller: no cloud provider provided
W0702 13:57:23.873615       1 controllermanager.go:600] Skipping "cloud-node-lifecycle"
I0702 13:57:23.884608       1 controllermanager.go:622] Started "persistentvolume-binder"
I0702 13:57:23.887365       1 pv_controller_base.go:318] Starting persistent volume controller
I0702 13:57:23.887859       1 shared_informer.go:273] Waiting for caches to sync for persistent volume
I0702 13:57:23.894216       1 controllermanager.go:622] Started "clusterrole-aggregation"
I0702 13:57:23.894481       1 clusterroleaggregation_controller.go:188] Starting ClusterRoleAggregator
I0702 13:57:23.894524       1 shared_informer.go:273] Waiting for caches to sync for ClusterRoleAggregator
I0702 13:57:23.901824       1 controllermanager.go:622] Started "endpointslice"
I0702 13:57:23.902566       1 endpointslice_controller.go:257] Starting endpoint slice controller
I0702 13:57:23.902706       1 shared_informer.go:273] Waiting for caches to sync for endpoint_slice
I0702 13:57:23.980943       1 shared_informer.go:273] Waiting for caches to sync for resource quota
I0702 13:57:24.060378       1 shared_informer.go:280] Caches are synced for TTL after finished
I0702 13:57:24.061320       1 shared_informer.go:280] Caches are synced for service account
I0702 13:57:24.065098       1 shared_informer.go:280] Caches are synced for crt configmap
I0702 13:57:24.067877       1 shared_informer.go:280] Caches are synced for cronjob
I0702 13:57:24.071581       1 shared_informer.go:280] Caches are synced for bootstrap_signer
I0702 13:57:24.073799       1 shared_informer.go:280] Caches are synced for namespace
W0702 13:57:24.074362       1 actual_state_of_world.go:541] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="minikube" does not exist
I0702 13:57:24.079887       1 shared_informer.go:280] Caches are synced for certificate-csrapproving
I0702 13:57:24.080016       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-kubelet-serving
I0702 13:57:24.085953       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-kubelet-client
I0702 13:57:24.086333       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0702 13:57:24.086357       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-legacy-unknown
I0702 13:57:24.086465       1 shared_informer.go:280] Caches are synced for node
I0702 13:57:24.159829       1 range_allocator.go:167] Sending events to api server.
I0702 13:57:24.160505       1 range_allocator.go:171] Starting range CIDR allocator
I0702 13:57:24.160583       1 shared_informer.go:273] Waiting for caches to sync for cidrallocator
I0702 13:57:24.160894       1 shared_informer.go:280] Caches are synced for cidrallocator
I0702 13:57:24.160927       1 shared_informer.go:280] Caches are synced for ClusterRoleAggregator
I0702 13:57:24.161037       1 shared_informer.go:280] Caches are synced for TTL
I0702 13:57:24.188453       1 shared_informer.go:280] Caches are synced for persistent volume
I0702 13:57:24.189012       1 shared_informer.go:280] Caches are synced for ReplicaSet
I0702 13:57:24.260257       1 shared_informer.go:280] Caches are synced for job
I0702 13:57:24.260641       1 shared_informer.go:280] Caches are synced for expand
I0702 13:57:24.260766       1 shared_informer.go:280] Caches are synced for disruption
I0702 13:57:24.260838       1 shared_informer.go:280] Caches are synced for PV protection
I0702 13:57:24.260885       1 shared_informer.go:280] Caches are synced for PVC protection
I0702 13:57:24.263152       1 shared_informer.go:280] Caches are synced for stateful set
I0702 13:57:24.264393       1 shared_informer.go:280] Caches are synced for HPA
I0702 13:57:24.264597       1 shared_informer.go:280] Caches are synced for endpoint
I0702 13:57:24.269589       1 shared_informer.go:280] Caches are synced for daemon sets
I0702 13:57:24.273749       1 shared_informer.go:280] Caches are synced for taint
I0702 13:57:24.274052       1 node_lifecycle_controller.go:1438] Initializing eviction metric for zone: 
W0702 13:57:24.274322       1 node_lifecycle_controller.go:1053] Missing timestamp for Node minikube. Assuming now as a timestamp.
I0702 13:57:24.274447       1 node_lifecycle_controller.go:1254] Controller detected that zone  is now in state Normal.
I0702 13:57:24.276330       1 shared_informer.go:280] Caches are synced for deployment
I0702 13:57:24.278322       1 shared_informer.go:280] Caches are synced for attach detach
I0702 13:57:24.281006       1 shared_informer.go:280] Caches are synced for GC
I0702 13:57:24.284389       1 shared_informer.go:280] Caches are synced for ephemeral
I0702 13:57:24.284613       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I0702 13:57:24.284783       1 taint_manager.go:211] "Sending events to api server"
I0702 13:57:24.287270       1 event.go:294] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0702 13:57:24.287354       1 shared_informer.go:280] Caches are synced for endpoint_slice_mirroring
I0702 13:57:24.287595       1 shared_informer.go:280] Caches are synced for ReplicationController
I0702 13:57:24.370521       1 shared_informer.go:280] Caches are synced for endpoint_slice
I0702 13:57:24.382159       1 shared_informer.go:280] Caches are synced for resource quota
I0702 13:57:24.384078       1 shared_informer.go:280] Caches are synced for resource quota
I0702 13:57:24.385215       1 shared_informer.go:273] Waiting for caches to sync for garbage collector
I0702 13:57:24.660181       1 shared_informer.go:280] Caches are synced for garbage collector
I0702 13:57:24.676382       1 shared_informer.go:280] Caches are synced for garbage collector
I0702 13:57:24.676458       1 garbagecollector.go:163] Garbage collector: all resource monitors have synced. Proceeding to collect garbage
E0702 13:57:39.183686       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 13:57:39.183795       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 13:57:39.183838       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 13:57:54.213120       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 13:57:54.213484       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 13:57:54.213687       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 13:58:09.195267       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 13:58:09.195513       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 13:58:09.195560       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 13:58:24.225251       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 13:58:24.225697       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 13:58:24.225776       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 13:58:39.189314       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 13:58:39.189416       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 13:58:39.189454       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 13:58:54.196023       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 13:58:54.196206       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 13:58:54.196253       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 13:59:09.198657       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 13:59:09.198780       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 13:59:09.198824       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 13:59:24.198772       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 13:59:24.198885       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 13:59:24.198910       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 13:59:39.191831       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 13:59:39.191977       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 13:59:39.192020       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 13:59:54.281790       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 13:59:54.282098       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 13:59:54.282181       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:00:09.195482       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:00:09.195596       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:00:09.195641       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:00:18.001005       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled down replica set assignmentservice-6c88f459cc to 1 from 2"
I0702 14:00:18.013370       1 event.go:294] "Event occurred" object="default/assignmentservice-6c88f459cc" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulDelete" message="Deleted pod: assignmentservice-6c88f459cc-2lsbn"
I0702 14:00:24.249304       1 horizontal.go:801] Successful rescale of assignmentservice, old size: 1, new size: 2, reason: Current number of replicas below Spec.MinReplicas
I0702 14:00:24.249673       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Normal" reason="SuccessfulRescale" message="New size: 2; reason: Current number of replicas below Spec.MinReplicas"
I0702 14:00:24.266741       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set assignmentservice-6c88f459cc to 2 from 1"
I0702 14:00:24.360297       1 event.go:294] "Event occurred" object="default/assignmentservice-6c88f459cc" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: assignmentservice-6c88f459cc-gx7jx"
I0702 14:00:39.272870       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:00:39.364701       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:00:39.364933       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:00:54.378813       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:00:54.378953       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:00:54.378999       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:01:09.382567       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:01:09.382692       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:01:09.382715       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:01:24.393851       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:01:24.393910       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:01:24.393923       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:01:39.397243       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:01:39.397300       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:01:39.397315       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:01:54.489055       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:01:54.489482       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:01:54.489651       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:02:09.502355       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:02:09.502673       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:02:09.502750       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:02:24.584287       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:02:24.584532       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:02:24.584658       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:02:39.591668       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:02:39.591944       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:02:39.592028       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:02:54.604938       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:02:54.605062       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:02:54.605086       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:03:09.609403       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:03:09.609528       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:03:09.609570       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:03:24.619848       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:03:24.619969       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:03:24.620008       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:03:39.627547       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:03:39.627644       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:03:39.627667       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:03:54.639415       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:03:54.639594       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:03:54.639624       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:04:09.651845       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:04:09.652258       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:04:09.652426       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:04:24.697466       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:04:24.697880       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:04:24.697977       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
E0702 14:04:39.702203       1 horizontal.go:254] failed to compute desired number of replicas based on listed metrics for Deployment/default/assignmentservice: invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)
I0702 14:04:39.702336       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedGetResourceMetric" message="failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
I0702 14:04:39.702386       1 event.go:294] "Event occurred" object="default/assignmentservice" fieldPath="" kind="HorizontalPodAutoscaler" apiVersion="autoscaling/v2" type="Warning" reason="FailedComputeMetricsReplicas" message="invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)"
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-minikube ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-48r22 ====
I0702 13:57:20.486944       1 node.go:163] Successfully retrieved node IP: 192.168.49.2
I0702 13:57:20.487035       1 server_others.go:109] "Detected node IP" address="192.168.49.2"
I0702 13:57:20.487087       1 server_others.go:535] "Using iptables proxy"
I0702 13:57:21.271590       1 server_others.go:176] "Using iptables Proxier"
I0702 13:57:21.271656       1 server_others.go:183] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0702 13:57:21.271670       1 server_others.go:184] "Creating dualStackProxier for iptables"
I0702 13:57:21.271688       1 server_others.go:465] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6"
I0702 13:57:21.274518       1 proxier.go:242] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0702 13:57:21.275888       1 server.go:655] "Version info" version="v1.26.3"
I0702 13:57:21.275913       1 server.go:657] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0702 13:57:21.280174       1 config.go:317] "Starting service config controller"
I0702 13:57:21.280628       1 shared_informer.go:273] Waiting for caches to sync for service config
I0702 13:57:21.281856       1 config.go:226] "Starting endpoint slice config controller"
I0702 13:57:21.286835       1 shared_informer.go:273] Waiting for caches to sync for endpoint slice config
I0702 13:57:21.284325       1 config.go:444] "Starting node config controller"
I0702 13:57:21.287216       1 shared_informer.go:273] Waiting for caches to sync for node config
I0702 13:57:21.382695       1 shared_informer.go:280] Caches are synced for service config
I0702 13:57:21.388065       1 shared_informer.go:280] Caches are synced for node config
I0702 13:57:21.388124       1 shared_informer.go:280] Caches are synced for endpoint slice config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-48r22 ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-minikube ====
I0702 13:57:04.914521       1 serving.go:348] Generated self-signed cert in-memory
W0702 13:57:09.190078       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0702 13:57:09.190260       1 authentication.go:349] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0702 13:57:09.190314       1 authentication.go:350] Continuing without authentication configuration. This may treat all requests as anonymous.
W0702 13:57:09.190372       1 authentication.go:351] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0702 13:57:09.288522       1 server.go:152] "Starting Kubernetes Scheduler" version="v1.26.3"
I0702 13:57:09.288641       1 server.go:154] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0702 13:57:09.290986       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0702 13:57:09.291565       1 shared_informer.go:273] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0702 13:57:09.291001       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I0702 13:57:09.291017       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0702 13:57:09.391824       1 shared_informer.go:280] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-minikube ====
==== START logs for container storage-provisioner of pod kube-system/storage-provisioner ====
I0702 13:57:35.460082       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0702 13:57:35.470198       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0702 13:57:35.470659       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0702 13:57:52.887297       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0702 13:57:52.887454       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"bd96763b-2157-4154-be05-a00f067fc204", APIVersion:"v1", ResourceVersion:"4164", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_21808ad7-f7d9-470d-96be-6235eb9797b7 became leader
I0702 13:57:52.887570       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_21808ad7-f7d9-470d-96be-6235eb9797b7!
I0702 13:57:52.989598       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_21808ad7-f7d9-470d-96be-6235eb9797b7!
==== END logs for container storage-provisioner of pod kube-system/storage-provisioner ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-2lsbn.176ddc94b266e7b8",
                "namespace": "default",
                "uid": "e5fd3d75-31a2-45d2-be39-06b2ff8c37bf",
                "resourceVersion": "2659",
                "creationTimestamp": "2023-07-01T21:46:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-2lsbn",
                "uid": "a428528c-8b7d-42e8-b409-e09968ff7f7f",
                "apiVersion": "v1",
                "resourceVersion": "2653"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/assignmentservice-6c88f459cc-2lsbn to minikube",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-07-01T21:46:06Z",
            "lastTimestamp": "2023-07-01T21:46:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-2lsbn.176ddc94d810691c",
                "namespace": "default",
                "uid": "86aa88ab-bd13-42f2-bedc-3c7c3673ebf6",
                "resourceVersion": "2663",
                "creationTimestamp": "2023-07-01T21:46:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-2lsbn",
                "uid": "a428528c-8b7d-42e8-b409-e09968ff7f7f",
                "apiVersion": "v1",
                "resourceVersion": "2655",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Pulled",
            "message": "Container image \"abi20/assignmentservice:v2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:46:07Z",
            "lastTimestamp": "2023-07-01T21:46:07Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-2lsbn.176ddc94da04b674",
                "namespace": "default",
                "uid": "24bd6ad2-e174-453b-bc36-882fff5a1528",
                "resourceVersion": "2664",
                "creationTimestamp": "2023-07-01T21:46:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-2lsbn",
                "uid": "a428528c-8b7d-42e8-b409-e09968ff7f7f",
                "apiVersion": "v1",
                "resourceVersion": "2655",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Created",
            "message": "Created container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:46:07Z",
            "lastTimestamp": "2023-07-01T21:46:07Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-2lsbn.176ddc94e01a76d4",
                "namespace": "default",
                "uid": "387192c7-15a3-48eb-9dda-adcf4ef8d4d7",
                "resourceVersion": "2665",
                "creationTimestamp": "2023-07-01T21:46:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-2lsbn",
                "uid": "a428528c-8b7d-42e8-b409-e09968ff7f7f",
                "apiVersion": "v1",
                "resourceVersion": "2655",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Started",
            "message": "Started container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:46:07Z",
            "lastTimestamp": "2023-07-01T21:46:07Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-2lsbn.176e11928f8ca4c0",
                "namespace": "default",
                "uid": "5f61d6e9-67ff-458c-b742-2ef9786d6d4e",
                "resourceVersion": "4079",
                "creationTimestamp": "2023-07-02T13:57:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-2lsbn",
                "uid": "a428528c-8b7d-42e8-b409-e09968ff7f7f",
                "apiVersion": "v1",
                "resourceVersion": "2667"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:11Z",
            "lastTimestamp": "2023-07-02T13:57:11Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-2lsbn.176e1193faeab33c",
                "namespace": "default",
                "uid": "ed50f417-3a62-4e3c-8b23-d65083708d62",
                "resourceVersion": "4112",
                "creationTimestamp": "2023-07-02T13:57:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-2lsbn",
                "uid": "a428528c-8b7d-42e8-b409-e09968ff7f7f",
                "apiVersion": "v1",
                "resourceVersion": "2667",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Pulled",
            "message": "Container image \"abi20/assignmentservice:v2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:17Z",
            "lastTimestamp": "2023-07-02T13:57:17Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-2lsbn.176e119405cb372c",
                "namespace": "default",
                "uid": "dd02bf3c-135b-4432-a821-bc330bc42787",
                "resourceVersion": "4113",
                "creationTimestamp": "2023-07-02T13:57:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-2lsbn",
                "uid": "a428528c-8b7d-42e8-b409-e09968ff7f7f",
                "apiVersion": "v1",
                "resourceVersion": "2667",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Created",
            "message": "Created container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:17Z",
            "lastTimestamp": "2023-07-02T13:57:17Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-2lsbn.176e11943575eee0",
                "namespace": "default",
                "uid": "64a003c2-eeb4-49b6-828e-4deb51df1b2c",
                "resourceVersion": "4114",
                "creationTimestamp": "2023-07-02T13:57:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-2lsbn",
                "uid": "a428528c-8b7d-42e8-b409-e09968ff7f7f",
                "apiVersion": "v1",
                "resourceVersion": "2667",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Started",
            "message": "Started container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:18Z",
            "lastTimestamp": "2023-07-02T13:57:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-2lsbn.176e11bdfdaccd9c",
                "namespace": "default",
                "uid": "7de3e80e-3d50-47b4-b389-33da88b0a241",
                "resourceVersion": "4304",
                "creationTimestamp": "2023-07-02T14:00:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-2lsbn",
                "uid": "a428528c-8b7d-42e8-b409-e09968ff7f7f",
                "apiVersion": "v1",
                "resourceVersion": "2667",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Killing",
            "message": "Stopping container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T14:00:18Z",
            "lastTimestamp": "2023-07-02T14:00:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gtczk.176ddc9133bb111c",
                "namespace": "default",
                "uid": "38a1e8c5-cb89-4881-a4b3-02c21239dcca",
                "resourceVersion": "2612",
                "creationTimestamp": "2023-07-01T21:45:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gtczk",
                "uid": "d94c20e6-3529-4fb6-9f1f-d699dd53c650",
                "apiVersion": "v1",
                "resourceVersion": "2607"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/assignmentservice-6c88f459cc-gtczk to minikube",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-07-01T21:45:51Z",
            "lastTimestamp": "2023-07-01T21:45:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gtczk.176ddc915b111874",
                "namespace": "default",
                "uid": "98fed6da-b46d-4a41-9920-897a912d7111",
                "resourceVersion": "2616",
                "creationTimestamp": "2023-07-01T21:45:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gtczk",
                "uid": "d94c20e6-3529-4fb6-9f1f-d699dd53c650",
                "apiVersion": "v1",
                "resourceVersion": "2609",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Pulled",
            "message": "Container image \"abi20/assignmentservice:v2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:45:52Z",
            "lastTimestamp": "2023-07-01T21:45:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gtczk.176ddc915cda44c8",
                "namespace": "default",
                "uid": "a9b54567-b3ac-4c76-8315-b9f4d758f10e",
                "resourceVersion": "2617",
                "creationTimestamp": "2023-07-01T21:45:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gtczk",
                "uid": "d94c20e6-3529-4fb6-9f1f-d699dd53c650",
                "apiVersion": "v1",
                "resourceVersion": "2609",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Created",
            "message": "Created container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:45:52Z",
            "lastTimestamp": "2023-07-01T21:45:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gtczk.176ddc91644c852c",
                "namespace": "default",
                "uid": "e63affdc-d83a-43f5-80d9-295931448c21",
                "resourceVersion": "2619",
                "creationTimestamp": "2023-07-01T21:45:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gtczk",
                "uid": "d94c20e6-3529-4fb6-9f1f-d699dd53c650",
                "apiVersion": "v1",
                "resourceVersion": "2609",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Started",
            "message": "Started container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:45:52Z",
            "lastTimestamp": "2023-07-01T21:45:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gtczk.176e11926bc29b1c",
                "namespace": "default",
                "uid": "ba8c5e86-875d-434d-8646-91eb42ce9753",
                "resourceVersion": "4075",
                "creationTimestamp": "2023-07-02T13:57:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gtczk",
                "uid": "d94c20e6-3529-4fb6-9f1f-d699dd53c650",
                "apiVersion": "v1",
                "resourceVersion": "2620"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:10Z",
            "lastTimestamp": "2023-07-02T13:57:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gtczk.176e119377e38eb4",
                "namespace": "default",
                "uid": "a8512415-3bbd-4748-b705-d0094df0e67e",
                "resourceVersion": "4090",
                "creationTimestamp": "2023-07-02T13:57:19Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gtczk",
                "uid": "d94c20e6-3529-4fb6-9f1f-d699dd53c650",
                "apiVersion": "v1",
                "resourceVersion": "2620",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Pulled",
            "message": "Container image \"abi20/assignmentservice:v2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:15Z",
            "lastTimestamp": "2023-07-02T13:57:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gtczk.176e11939ac67d74",
                "namespace": "default",
                "uid": "84fa7edc-b11a-4018-97ff-2084f68eca35",
                "resourceVersion": "4098",
                "creationTimestamp": "2023-07-02T13:57:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gtczk",
                "uid": "d94c20e6-3529-4fb6-9f1f-d699dd53c650",
                "apiVersion": "v1",
                "resourceVersion": "2620",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Created",
            "message": "Created container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:15Z",
            "lastTimestamp": "2023-07-02T13:57:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gtczk.176e1193ee999210",
                "namespace": "default",
                "uid": "0640dc53-8579-4e36-8295-d12cb9345e3a",
                "resourceVersion": "4106",
                "creationTimestamp": "2023-07-02T13:57:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gtczk",
                "uid": "d94c20e6-3529-4fb6-9f1f-d699dd53c650",
                "apiVersion": "v1",
                "resourceVersion": "2620",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Started",
            "message": "Started container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:17Z",
            "lastTimestamp": "2023-07-02T13:57:17Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gx7jx.176e11bf78aabd3c",
                "namespace": "default",
                "uid": "dbf2827b-651f-4902-b619-5c41fde3e6bb",
                "resourceVersion": "4330",
                "creationTimestamp": "2023-07-02T14:00:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gx7jx",
                "uid": "aaa62369-c1b2-404b-8caa-2f773ad7f277",
                "apiVersion": "v1",
                "resourceVersion": "4322"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/assignmentservice-6c88f459cc-gx7jx to minikube",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-07-02T14:00:24.371382Z",
            "action": "Binding",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-minikube"
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gx7jx.176e11bfa2e5b3e0",
                "namespace": "default",
                "uid": "d772e207-a05a-49e0-8a24-4d9747bb90fe",
                "resourceVersion": "4333",
                "creationTimestamp": "2023-07-02T14:00:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gx7jx",
                "uid": "aaa62369-c1b2-404b-8caa-2f773ad7f277",
                "apiVersion": "v1",
                "resourceVersion": "4326",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Pulled",
            "message": "Container image \"abi20/assignmentservice:v2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T14:00:25Z",
            "lastTimestamp": "2023-07-02T14:00:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gx7jx.176e11bfa50f3394",
                "namespace": "default",
                "uid": "734da43c-b86d-48f5-b5db-cba94e6e4d7b",
                "resourceVersion": "4334",
                "creationTimestamp": "2023-07-02T14:00:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gx7jx",
                "uid": "aaa62369-c1b2-404b-8caa-2f773ad7f277",
                "apiVersion": "v1",
                "resourceVersion": "4326",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Created",
            "message": "Created container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T14:00:25Z",
            "lastTimestamp": "2023-07-02T14:00:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gx7jx.176e11bfad841f80",
                "namespace": "default",
                "uid": "8b3099b1-f4a3-427a-9309-5351af562194",
                "resourceVersion": "4335",
                "creationTimestamp": "2023-07-02T14:00:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-gx7jx",
                "uid": "aaa62369-c1b2-404b-8caa-2f773ad7f277",
                "apiVersion": "v1",
                "resourceVersion": "4326",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Started",
            "message": "Started container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T14:00:25Z",
            "lastTimestamp": "2023-07-02T14:00:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-kq24k.176ddc0cbab532cc",
                "namespace": "default",
                "uid": "ab53a68d-81c8-4776-8ffd-1798bb65284a",
                "resourceVersion": "2081",
                "creationTimestamp": "2023-07-01T21:36:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-kq24k",
                "uid": "f7bb5490-778c-4105-b5db-876f0d200e77",
                "apiVersion": "v1",
                "resourceVersion": "2076"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/assignmentservice-6c88f459cc-kq24k to minikube",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-07-01T21:36:22Z",
            "lastTimestamp": "2023-07-01T21:36:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-kq24k.176ddc0ce15784ac",
                "namespace": "default",
                "uid": "e18b2f8c-e75c-436a-a756-db128b856ff5",
                "resourceVersion": "2086",
                "creationTimestamp": "2023-07-01T21:36:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-kq24k",
                "uid": "f7bb5490-778c-4105-b5db-876f0d200e77",
                "apiVersion": "v1",
                "resourceVersion": "2077",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"abi20/assignmentservice:v2\"",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:36:23Z",
            "lastTimestamp": "2023-07-01T21:36:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-kq24k.176ddc0e2f3a8e70",
                "namespace": "default",
                "uid": "02f1c1d3-6bc2-4cd4-a4c8-28e18966acf7",
                "resourceVersion": "2091",
                "creationTimestamp": "2023-07-01T21:36:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-kq24k",
                "uid": "f7bb5490-778c-4105-b5db-876f0d200e77",
                "apiVersion": "v1",
                "resourceVersion": "2077",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"abi20/assignmentservice:v2\" in 5.6016378s (5.6016621s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:36:28Z",
            "lastTimestamp": "2023-07-01T21:36:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-kq24k.176ddc0e32f816f4",
                "namespace": "default",
                "uid": "f95e177e-c3f7-4807-8cb4-ed12fdde7469",
                "resourceVersion": "2092",
                "creationTimestamp": "2023-07-01T21:36:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-kq24k",
                "uid": "f7bb5490-778c-4105-b5db-876f0d200e77",
                "apiVersion": "v1",
                "resourceVersion": "2077",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Created",
            "message": "Created container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:36:28Z",
            "lastTimestamp": "2023-07-01T21:36:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-kq24k.176ddc0e3b642df0",
                "namespace": "default",
                "uid": "7e72c05b-7185-4340-afdf-5df27a4d5895",
                "resourceVersion": "2093",
                "creationTimestamp": "2023-07-01T21:36:29Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-kq24k",
                "uid": "f7bb5490-778c-4105-b5db-876f0d200e77",
                "apiVersion": "v1",
                "resourceVersion": "2077",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Started",
            "message": "Started container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:36:29Z",
            "lastTimestamp": "2023-07-01T21:36:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-kq24k.176ddc84db208480",
                "namespace": "default",
                "uid": "d6186a60-8b5f-4f23-8650-4a79ec387409",
                "resourceVersion": "2548",
                "creationTimestamp": "2023-07-01T21:44:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc-kq24k",
                "uid": "f7bb5490-778c-4105-b5db-876f0d200e77",
                "apiVersion": "v1",
                "resourceVersion": "2077",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Killing",
            "message": "Stopping container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:44:58Z",
            "lastTimestamp": "2023-07-01T21:44:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc.176ddc0cba662484",
                "namespace": "default",
                "uid": "118493e7-b548-45c0-9622-d85cbb5ad4a6",
                "resourceVersion": "2079",
                "creationTimestamp": "2023-07-01T21:36:22Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc",
                "uid": "9afee194-a8e9-4240-aee2-bbef472e3c46",
                "apiVersion": "apps/v1",
                "resourceVersion": "2073"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: assignmentservice-6c88f459cc-kq24k",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-01T21:36:22Z",
            "lastTimestamp": "2023-07-01T21:36:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc.176ddc84db1887f8",
                "namespace": "default",
                "uid": "39c96081-a376-471d-88c9-4b6b2b6b7f20",
                "resourceVersion": "2549",
                "creationTimestamp": "2023-07-01T21:44:58Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc",
                "uid": "9afee194-a8e9-4240-aee2-bbef472e3c46",
                "apiVersion": "apps/v1",
                "resourceVersion": "2543"
            },
            "reason": "SuccessfulDelete",
            "message": "Deleted pod: assignmentservice-6c88f459cc-kq24k",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-01T21:44:58Z",
            "lastTimestamp": "2023-07-01T21:44:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc.176ddc9133523110",
                "namespace": "default",
                "uid": "2ab6bdcf-ce7c-4cd8-bb02-34a1d053352f",
                "resourceVersion": "2611",
                "creationTimestamp": "2023-07-01T21:45:51Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc",
                "uid": "9afee194-a8e9-4240-aee2-bbef472e3c46",
                "apiVersion": "apps/v1",
                "resourceVersion": "2605"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: assignmentservice-6c88f459cc-gtczk",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-01T21:45:51Z",
            "lastTimestamp": "2023-07-01T21:45:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc.176ddc94b2331cbc",
                "namespace": "default",
                "uid": "ad5898b9-2426-4a58-bc82-d5365adff10b",
                "resourceVersion": "2656",
                "creationTimestamp": "2023-07-01T21:46:06Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc",
                "uid": "9afee194-a8e9-4240-aee2-bbef472e3c46",
                "apiVersion": "apps/v1",
                "resourceVersion": "2649"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: assignmentservice-6c88f459cc-2lsbn",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-01T21:46:06Z",
            "lastTimestamp": "2023-07-01T21:46:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc.176e11bdfdb05d54",
                "namespace": "default",
                "uid": "7845daa3-f0be-4bd1-9341-5b720b464f38",
                "resourceVersion": "4306",
                "creationTimestamp": "2023-07-02T14:00:18Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc",
                "uid": "9afee194-a8e9-4240-aee2-bbef472e3c46",
                "apiVersion": "apps/v1",
                "resourceVersion": "4300"
            },
            "reason": "SuccessfulDelete",
            "message": "Deleted pod: assignmentservice-6c88f459cc-2lsbn",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-02T14:00:18Z",
            "lastTimestamp": "2023-07-02T14:00:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc.176e11bf77fe3030",
                "namespace": "default",
                "uid": "0e67d23f-ce32-4c47-a0e8-735877bc7ce3",
                "resourceVersion": "4324",
                "creationTimestamp": "2023-07-02T14:00:24Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "assignmentservice-6c88f459cc",
                "uid": "9afee194-a8e9-4240-aee2-bbef472e3c46",
                "apiVersion": "apps/v1",
                "resourceVersion": "4317"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: assignmentservice-6c88f459cc-gx7jx",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-02T14:00:24Z",
            "lastTimestamp": "2023-07-02T14:00:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddb4b91712a54",
                "namespace": "default",
                "uid": "901199e4-f83f-457e-b926-116b1018c4ce",
                "resourceVersion": "1344",
                "creationTimestamp": "2023-07-01T21:22:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1",
                "resourceVersion": "1338"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/assignmentservice-6fcd44cc4-mpbvz to minikube",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-07-01T21:22:32Z",
            "lastTimestamp": "2023-07-01T21:22:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddb4bb8f40d44",
                "namespace": "default",
                "uid": "99c685f2-b1ce-4056-8a9a-a671e40f6fc1",
                "resourceVersion": "1453",
                "creationTimestamp": "2023-07-01T21:22:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1",
                "resourceVersion": "1341",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"abi20/assignmentservice:v1\"",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:22:33Z",
            "lastTimestamp": "2023-07-01T21:24:08Z",
            "count": 4,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddb4c8e4de028",
                "namespace": "default",
                "uid": "907d3cc1-3ad9-49fa-9b44-ff473d630fc5",
                "resourceVersion": "1404",
                "creationTimestamp": "2023-07-01T21:22:37Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1",
                "resourceVersion": "1341",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Failed",
            "message": "Failed to pull image \"abi20/assignmentservice:v1\": rpc error: code = Unknown desc = Error response from daemon: pull access denied for abi20/assignmentservice, repository does not exist or may require 'docker login': denied: requested access to the resource is denied",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:22:37Z",
            "lastTimestamp": "2023-07-01T21:23:21Z",
            "count": 3,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddb4c8e4e6c64",
                "namespace": "default",
                "uid": "6e7cb671-c48a-4774-8fcd-a4aa4cc9894b",
                "resourceVersion": "1405",
                "creationTimestamp": "2023-07-01T21:22:37Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1",
                "resourceVersion": "1341",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Failed",
            "message": "Error: ErrImagePull",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:22:37Z",
            "lastTimestamp": "2023-07-01T21:23:21Z",
            "count": 3,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddb4cc78e8680",
                "namespace": "default",
                "uid": "97b1b720-6f51-4445-8aa9-aed1697686c6",
                "resourceVersion": "1441",
                "creationTimestamp": "2023-07-01T21:22:38Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1",
                "resourceVersion": "1341",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "BackOff",
            "message": "Back-off pulling image \"abi20/assignmentservice:v1\"",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:22:38Z",
            "lastTimestamp": "2023-07-01T21:23:56Z",
            "count": 5,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddb4cc78efc78",
                "namespace": "default",
                "uid": "1bd02cb5-3109-43ae-a66c-0102cbc8c111",
                "resourceVersion": "1442",
                "creationTimestamp": "2023-07-01T21:22:38Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1",
                "resourceVersion": "1341",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Failed",
            "message": "Error: ImagePullBackOff",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:22:38Z",
            "lastTimestamp": "2023-07-01T21:23:56Z",
            "count": 5,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddb6bb6c6beac",
                "namespace": "default",
                "uid": "e501112a-7ee9-471a-b39c-a72135b5f197",
                "resourceVersion": "1487",
                "creationTimestamp": "2023-07-01T21:24:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1",
                "resourceVersion": "1341",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"abi20/assignmentservice:v1\" in 42.0420353s (42.0420588s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:24:51Z",
            "lastTimestamp": "2023-07-01T21:24:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddb6bd7836398",
                "namespace": "default",
                "uid": "02255707-03fc-40d9-af3e-e59b28b2ef7e",
                "resourceVersion": "1488",
                "creationTimestamp": "2023-07-01T21:24:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1",
                "resourceVersion": "1341",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Created",
            "message": "Created container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:24:51Z",
            "lastTimestamp": "2023-07-01T21:24:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddb6bdf510b98",
                "namespace": "default",
                "uid": "f2013bbb-1e9f-48d0-860a-fe302c1ca5cc",
                "resourceVersion": "1489",
                "creationTimestamp": "2023-07-01T21:24:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1",
                "resourceVersion": "1341",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Started",
            "message": "Started container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:24:51Z",
            "lastTimestamp": "2023-07-01T21:24:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddc0e4aec1468",
                "namespace": "default",
                "uid": "4c13959b-4431-45f3-8ae2-85903d2a3e8a",
                "resourceVersion": "2138",
                "creationTimestamp": "2023-07-01T21:36:29Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1",
                "resourceVersion": "1341",
                "fieldPath": "spec.containers{assignmentservice}"
            },
            "reason": "Killing",
            "message": "Stopping container assignmentservice",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:36:29Z",
            "lastTimestamp": "2023-07-01T21:37:00Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4-mpbvz.176ddc15abc8a790",
                "namespace": "default",
                "uid": "ee9ff98c-5f45-4dec-a9af-babfdb8b89db",
                "resourceVersion": "2139",
                "creationTimestamp": "2023-07-01T21:37:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4-mpbvz",
                "uid": "8fe6410a-568e-44a6-88fe-c2213a76df85",
                "apiVersion": "v1"
            },
            "reason": "FailedKillPod",
            "message": "error killing pod: failed to \"KillContainer\" for \"assignmentservice\" with KillContainerError: \"rpc error: code = Unknown desc = Error response from daemon: No such container: b93b28d9d685b01d58adf4d217e4c471758e3c0b59716ab2356f6723ff4d2f02\"",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:37:00Z",
            "lastTimestamp": "2023-07-01T21:37:00Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4.176ddb4b90f84904",
                "namespace": "default",
                "uid": "429a367f-74cb-4aca-a50a-eb00dd703e00",
                "resourceVersion": "1340",
                "creationTimestamp": "2023-07-01T21:22:32Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4",
                "uid": "708d7fa6-8bca-4720-93a9-e9a51d78ded3",
                "apiVersion": "apps/v1",
                "resourceVersion": "1336"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: assignmentservice-6fcd44cc4-mpbvz",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-01T21:22:32Z",
            "lastTimestamp": "2023-07-01T21:22:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4.176ddc0e4aed5c88",
                "namespace": "default",
                "uid": "9805e25a-5ad4-48ea-97da-6c186a9be83b",
                "resourceVersion": "2104",
                "creationTimestamp": "2023-07-01T21:36:29Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "assignmentservice-6fcd44cc4",
                "uid": "708d7fa6-8bca-4720-93a9-e9a51d78ded3",
                "apiVersion": "apps/v1",
                "resourceVersion": "2098"
            },
            "reason": "SuccessfulDelete",
            "message": "Deleted pod: assignmentservice-6fcd44cc4-mpbvz",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-01T21:36:29Z",
            "lastTimestamp": "2023-07-01T21:36:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-7556496b7c-gfhtn.176ddc849bc5264c",
                "namespace": "default",
                "uid": "8cfe8433-622e-4d52-9d7c-eaf13dd29520",
                "resourceVersion": "2531",
                "creationTimestamp": "2023-07-01T21:44:57Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-7556496b7c-gfhtn",
                "uid": "ad94dca3-7375-4feb-90e3-e92e240e087d",
                "apiVersion": "v1",
                "resourceVersion": "2526"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/assignmentservice-7556496b7c-gfhtn to minikube",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-07-01T21:44:57Z",
            "lastTimestamp": "2023-07-01T21:44:57Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-7556496b7c-gfhtn.176ddc84c423e2e0",
                "namespace": "default",
                "uid": "b121e0c3-e5eb-474e-8466-61a59cdccf5a",
                "resourceVersion": "2536",
                "creationTimestamp": "2023-07-01T21:44:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-7556496b7c-gfhtn",
                "uid": "ad94dca3-7375-4feb-90e3-e92e240e087d",
                "apiVersion": "v1",
                "resourceVersion": "2527",
                "fieldPath": "spec.containers{assign-ser}"
            },
            "reason": "Pulled",
            "message": "Container image \"abi20/assignmentservice:v2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:44:58Z",
            "lastTimestamp": "2023-07-01T21:44:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-7556496b7c-gfhtn.176ddc84c674cd98",
                "namespace": "default",
                "uid": "7fe43aa1-b717-45a4-95fe-91be02b5a8da",
                "resourceVersion": "2537",
                "creationTimestamp": "2023-07-01T21:44:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-7556496b7c-gfhtn",
                "uid": "ad94dca3-7375-4feb-90e3-e92e240e087d",
                "apiVersion": "v1",
                "resourceVersion": "2527",
                "fieldPath": "spec.containers{assign-ser}"
            },
            "reason": "Created",
            "message": "Created container assign-ser",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:44:58Z",
            "lastTimestamp": "2023-07-01T21:44:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-7556496b7c-gfhtn.176ddc84cbdd1c04",
                "namespace": "default",
                "uid": "a22a686f-1e8b-4765-ab70-d94ddea32d97",
                "resourceVersion": "2538",
                "creationTimestamp": "2023-07-01T21:44:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-7556496b7c-gfhtn",
                "uid": "ad94dca3-7375-4feb-90e3-e92e240e087d",
                "apiVersion": "v1",
                "resourceVersion": "2527",
                "fieldPath": "spec.containers{assign-ser}"
            },
            "reason": "Started",
            "message": "Started container assign-ser",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:44:58Z",
            "lastTimestamp": "2023-07-01T21:44:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-7556496b7c-gfhtn.176ddc919799cc50",
                "namespace": "default",
                "uid": "c76d10d0-ee61-429c-9896-8226991e5607",
                "resourceVersion": "2629",
                "creationTimestamp": "2023-07-01T21:45:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "assignmentservice-7556496b7c-gfhtn",
                "uid": "ad94dca3-7375-4feb-90e3-e92e240e087d",
                "apiVersion": "v1",
                "resourceVersion": "2527",
                "fieldPath": "spec.containers{assign-ser}"
            },
            "reason": "Killing",
            "message": "Stopping container assign-ser",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:45:53Z",
            "lastTimestamp": "2023-07-01T21:45:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-7556496b7c.176ddc849b866254",
                "namespace": "default",
                "uid": "2279fb82-cda5-4c6f-990b-2a0a7d10ab3d",
                "resourceVersion": "2528",
                "creationTimestamp": "2023-07-01T21:44:57Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "assignmentservice-7556496b7c",
                "uid": "81bfbed0-5d7c-4df8-80ff-6aeec2e3e095",
                "apiVersion": "apps/v1",
                "resourceVersion": "2523"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: assignmentservice-7556496b7c-gfhtn",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-01T21:44:57Z",
            "lastTimestamp": "2023-07-01T21:44:57Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice-7556496b7c.176ddc9197a94090",
                "namespace": "default",
                "uid": "5fb16d01-d795-41ed-9062-bf6d75ef9260",
                "resourceVersion": "2631",
                "creationTimestamp": "2023-07-01T21:45:53Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "assignmentservice-7556496b7c",
                "uid": "81bfbed0-5d7c-4df8-80ff-6aeec2e3e095",
                "apiVersion": "apps/v1",
                "resourceVersion": "2624"
            },
            "reason": "SuccessfulDelete",
            "message": "Deleted pod: assignmentservice-7556496b7c-gfhtn",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-01T21:45:53Z",
            "lastTimestamp": "2023-07-01T21:45:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddb4b908a47b0",
                "namespace": "default",
                "uid": "a50830a0-59b0-49d0-9171-208d49dfa01d",
                "resourceVersion": "1339",
                "creationTimestamp": "2023-07-01T21:22:32Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "apiVersion": "apps/v1",
                "resourceVersion": "1335"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set assignmentservice-6fcd44cc4 to 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-01T21:22:32Z",
            "lastTimestamp": "2023-07-01T21:22:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddc0cb9e12e3c",
                "namespace": "default",
                "uid": "74bfafeb-1fb9-4f6b-8897-94cbb96a6d94",
                "resourceVersion": "2075",
                "creationTimestamp": "2023-07-01T21:36:22Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "apiVersion": "apps/v1",
                "resourceVersion": "2072"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set assignmentservice-6c88f459cc to 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-01T21:36:22Z",
            "lastTimestamp": "2023-07-01T21:36:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddc0e4a884d70",
                "namespace": "default",
                "uid": "06036400-f67d-4fd3-a648-67f16fe98bad",
                "resourceVersion": "2099",
                "creationTimestamp": "2023-07-01T21:36:29Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "apiVersion": "apps/v1",
                "resourceVersion": "2084"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled down replica set assignmentservice-6fcd44cc4 to 0 from 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-01T21:36:29Z",
            "lastTimestamp": "2023-07-01T21:36:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddc849ac8c99c",
                "namespace": "default",
                "uid": "d3f428a9-2831-46b1-93af-3aac83618be3",
                "resourceVersion": "2525",
                "creationTimestamp": "2023-07-01T21:44:57Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "apiVersion": "apps/v1",
                "resourceVersion": "2522"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set assignmentservice-7556496b7c to 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-01T21:44:57Z",
            "lastTimestamp": "2023-07-01T21:44:57Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddc84da753378",
                "namespace": "default",
                "uid": "06c9454b-9e9c-452b-b36a-f9a6a5d3d858",
                "resourceVersion": "2544",
                "creationTimestamp": "2023-07-01T21:44:58Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "apiVersion": "apps/v1",
                "resourceVersion": "2534"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled down replica set assignmentservice-6c88f459cc to 0 from 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-01T21:44:58Z",
            "lastTimestamp": "2023-07-01T21:44:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddc9132e9710c",
                "namespace": "default",
                "uid": "4291a339-0715-460e-8361-2799b46c1a30",
                "resourceVersion": "2606",
                "creationTimestamp": "2023-07-01T21:45:51Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "apiVersion": "apps/v1",
                "resourceVersion": "2601"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set assignmentservice-6c88f459cc to 1 from 0",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-01T21:45:51Z",
            "lastTimestamp": "2023-07-01T21:45:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddc91972972fc",
                "namespace": "default",
                "uid": "66af1764-026f-42a4-9c24-5acf8b3109ae",
                "resourceVersion": "2625",
                "creationTimestamp": "2023-07-01T21:45:53Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "apiVersion": "apps/v1",
                "resourceVersion": "2615"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled down replica set assignmentservice-7556496b7c to 0 from 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-01T21:45:53Z",
            "lastTimestamp": "2023-07-01T21:45:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddc94b157bd5c",
                "namespace": "default",
                "uid": "445e3905-8fff-4e55-94fa-eb93a1df2553",
                "resourceVersion": "2650",
                "creationTimestamp": "2023-07-01T21:46:06Z"
            },
            "involvedObject": {
                "kind": "HorizontalPodAutoscaler",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "9694a8fa-8fa8-46ac-b2be-d4fa9c31dfc3",
                "apiVersion": "autoscaling/v2",
                "resourceVersion": "2603"
            },
            "reason": "SuccessfulRescale",
            "message": "New size: 2; reason: Current number of replicas below Spec.MinReplicas",
            "source": {
                "component": "horizontal-pod-autoscaler"
            },
            "firstTimestamp": "2023-07-01T21:46:06Z",
            "lastTimestamp": "2023-07-01T21:46:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddc94b1b71c34",
                "namespace": "default",
                "uid": "13b510ae-05f8-4976-8284-9c8b121ec200",
                "resourceVersion": "2652",
                "creationTimestamp": "2023-07-01T21:46:06Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "apiVersion": "apps/v1",
                "resourceVersion": "2648"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set assignmentservice-6c88f459cc to 2 from 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-01T21:46:06Z",
            "lastTimestamp": "2023-07-01T21:46:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddc983034e4f8",
                "namespace": "default",
                "uid": "30c865c2-62c3-46e7-8c2e-5eb433bc3f34",
                "resourceVersion": "3908",
                "creationTimestamp": "2023-07-01T21:46:21Z"
            },
            "involvedObject": {
                "kind": "HorizontalPodAutoscaler",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "9694a8fa-8fa8-46ac-b2be-d4fa9c31dfc3",
                "apiVersion": "autoscaling/v2",
                "resourceVersion": "2651"
            },
            "reason": "FailedGetResourceMetric",
            "message": "failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)",
            "source": {
                "component": "horizontal-pod-autoscaler"
            },
            "firstTimestamp": "2023-07-01T21:46:21Z",
            "lastTimestamp": "2023-07-01T22:11:07Z",
            "count": 100,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176ddc9830931bb8",
                "namespace": "default",
                "uid": "797f40d5-2c84-45eb-ba3d-2e92ffdb5c72",
                "resourceVersion": "2842",
                "creationTimestamp": "2023-07-01T21:46:21Z"
            },
            "involvedObject": {
                "kind": "HorizontalPodAutoscaler",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "9694a8fa-8fa8-46ac-b2be-d4fa9c31dfc3",
                "apiVersion": "autoscaling/v2",
                "resourceVersion": "2651"
            },
            "reason": "FailedComputeMetricsReplicas",
            "message": "invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)",
            "source": {
                "component": "horizontal-pod-autoscaler"
            },
            "firstTimestamp": "2023-07-01T21:46:21Z",
            "lastTimestamp": "2023-07-01T21:49:06Z",
            "count": 12,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176e119902b53f9c",
                "namespace": "default",
                "uid": "514ce9cb-17e4-4678-a581-8a6f4b3a189f",
                "resourceVersion": "4455",
                "creationTimestamp": "2023-07-02T13:57:39Z"
            },
            "involvedObject": {
                "kind": "HorizontalPodAutoscaler",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "9694a8fa-8fa8-46ac-b2be-d4fa9c31dfc3",
                "apiVersion": "autoscaling/v2",
                "resourceVersion": "2682"
            },
            "reason": "FailedGetResourceMetric",
            "message": "failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)",
            "source": {
                "component": "horizontal-pod-autoscaler"
            },
            "firstTimestamp": "2023-07-02T13:57:39Z",
            "lastTimestamp": "2023-07-02T14:02:39Z",
            "count": 20,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176e119902b5fcac",
                "namespace": "default",
                "uid": "f3263492-4800-4af7-9011-420a3974021a",
                "resourceVersion": "4353",
                "creationTimestamp": "2023-07-02T13:57:39Z"
            },
            "involvedObject": {
                "kind": "HorizontalPodAutoscaler",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "9694a8fa-8fa8-46ac-b2be-d4fa9c31dfc3",
                "apiVersion": "autoscaling/v2",
                "resourceVersion": "2682"
            },
            "reason": "FailedComputeMetricsReplicas",
            "message": "invalid metrics (1 invalid out of 1), first error is: failed to get cpu resource metric value: failed to get cpu utilization: unable to get metrics for resource cpu: unable to fetch metrics from resource metrics API: the server could not find the requested resource (get pods.metrics.k8s.io)",
            "source": {
                "component": "horizontal-pod-autoscaler"
            },
            "firstTimestamp": "2023-07-02T13:57:39Z",
            "lastTimestamp": "2023-07-02T14:00:39Z",
            "count": 12,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176e11bdfcf1fb70",
                "namespace": "default",
                "uid": "307db09e-8666-4556-bfb2-b9ca948df97b",
                "resourceVersion": "4301",
                "creationTimestamp": "2023-07-02T14:00:18Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "apiVersion": "apps/v1",
                "resourceVersion": "4299"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled down replica set assignmentservice-6c88f459cc to 1 from 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-02T14:00:18Z",
            "lastTimestamp": "2023-07-02T14:00:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176e11bf7162d258",
                "namespace": "default",
                "uid": "3ce70626-edfd-4218-8b86-4c9845e67261",
                "resourceVersion": "4318",
                "creationTimestamp": "2023-07-02T14:00:24Z"
            },
            "involvedObject": {
                "kind": "HorizontalPodAutoscaler",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "9694a8fa-8fa8-46ac-b2be-d4fa9c31dfc3",
                "apiVersion": "autoscaling/v2",
                "resourceVersion": "2682"
            },
            "reason": "SuccessfulRescale",
            "message": "New size: 2; reason: Current number of replicas below Spec.MinReplicas",
            "source": {
                "component": "horizontal-pod-autoscaler"
            },
            "firstTimestamp": "2023-07-02T14:00:24Z",
            "lastTimestamp": "2023-07-02T14:00:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "assignmentservice.176e11bf7264d778",
                "namespace": "default",
                "uid": "16215b68-f7f9-409a-ba3a-27899ccbbad6",
                "resourceVersion": "4319",
                "creationTimestamp": "2023-07-02T14:00:24Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "assignmentservice",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "apiVersion": "apps/v1",
                "resourceVersion": "4316"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set assignmentservice-6c88f459cc to 2 from 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-02T14:00:24Z",
            "lastTimestamp": "2023-07-02T14:00:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "docker-authentication-service-55f98b457f-2pg88.176ddaf04e3709e4",
                "namespace": "default",
                "uid": "f39a8d3e-b5a2-4b57-b20b-e554e1428f67",
                "resourceVersion": "969",
                "creationTimestamp": "2023-07-01T21:16:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "docker-authentication-service-55f98b457f-2pg88",
                "uid": "8ab46f33-8dc6-411c-9468-6d675f3aea1f",
                "apiVersion": "v1",
                "resourceVersion": "963"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/docker-authentication-service-55f98b457f-2pg88 to minikube",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-07-01T21:16:00Z",
            "lastTimestamp": "2023-07-01T21:16:00Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "docker-authentication-service-55f98b457f-2pg88.176ddaf0729118ac",
                "namespace": "default",
                "uid": "ca908d0b-1c21-4e5d-8148-8838802a9e50",
                "resourceVersion": "1083",
                "creationTimestamp": "2023-07-01T21:16:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "docker-authentication-service-55f98b457f-2pg88",
                "uid": "8ab46f33-8dc6-411c-9468-6d675f3aea1f",
                "apiVersion": "v1",
                "resourceVersion": "965",
                "fieldPath": "spec.containers{docker-authentication-service}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"abi20/docker-authentication-service:v1\"",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:16:01Z",
            "lastTimestamp": "2023-07-01T21:17:44Z",
            "count": 4,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "docker-authentication-service-55f98b457f-2pg88.176ddaf15f188458",
                "namespace": "default",
                "uid": "619ee559-b4ff-46af-80e4-feb13208ffd9",
                "resourceVersion": "1087",
                "creationTimestamp": "2023-07-01T21:16:05Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "docker-authentication-service-55f98b457f-2pg88",
                "uid": "8ab46f33-8dc6-411c-9468-6d675f3aea1f",
                "apiVersion": "v1",
                "resourceVersion": "965",
                "fieldPath": "spec.containers{docker-authentication-service}"
            },
            "reason": "Failed",
            "message": "Failed to pull image \"abi20/docker-authentication-service:v1\": rpc error: code = Unknown desc = Error response from daemon: pull access denied for abi20/docker-authentication-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:16:05Z",
            "lastTimestamp": "2023-07-01T21:17:48Z",
            "count": 4,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "docker-authentication-service-55f98b457f-2pg88.176ddaf15f18ffc8",
                "namespace": "default",
                "uid": "a120ed95-1c7e-497e-9318-d42d679e5dbd",
                "resourceVersion": "1088",
                "creationTimestamp": "2023-07-01T21:16:05Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "docker-authentication-service-55f98b457f-2pg88",
                "uid": "8ab46f33-8dc6-411c-9468-6d675f3aea1f",
                "apiVersion": "v1",
                "resourceVersion": "965",
                "fieldPath": "spec.containers{docker-authentication-service}"
            },
            "reason": "Failed",
            "message": "Error: ErrImagePull",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:16:05Z",
            "lastTimestamp": "2023-07-01T21:17:48Z",
            "count": 4,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "docker-authentication-service-55f98b457f-2pg88.176ddaf17e5fe9b4",
                "namespace": "default",
                "uid": "61e606a9-81a3-4bb7-90de-7d66e5fee596",
                "resourceVersion": "1799",
                "creationTimestamp": "2023-07-01T21:16:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "docker-authentication-service-55f98b457f-2pg88",
                "uid": "8ab46f33-8dc6-411c-9468-6d675f3aea1f",
                "apiVersion": "v1",
                "resourceVersion": "965",
                "fieldPath": "spec.containers{docker-authentication-service}"
            },
            "reason": "BackOff",
            "message": "Back-off pulling image \"abi20/docker-authentication-service:v1\"",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:16:06Z",
            "lastTimestamp": "2023-07-01T21:31:04Z",
            "count": 62,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "docker-authentication-service-55f98b457f-2pg88.176ddaf17e601da8",
                "namespace": "default",
                "uid": "116bbc5c-3441-4d74-ba92-86f98db56666",
                "resourceVersion": "1100",
                "creationTimestamp": "2023-07-01T21:16:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "docker-authentication-service-55f98b457f-2pg88",
                "uid": "8ab46f33-8dc6-411c-9468-6d675f3aea1f",
                "apiVersion": "v1",
                "resourceVersion": "965",
                "fieldPath": "spec.containers{docker-authentication-service}"
            },
            "reason": "Failed",
            "message": "Error: ImagePullBackOff",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-01T21:16:06Z",
            "lastTimestamp": "2023-07-01T21:18:00Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "docker-authentication-service-55f98b457f.176ddaf04dc2d894",
                "namespace": "default",
                "uid": "948f5c0a-50d4-4a21-b327-888f6d37a541",
                "resourceVersion": "966",
                "creationTimestamp": "2023-07-01T21:16:00Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "docker-authentication-service-55f98b457f",
                "uid": "aa7ddf5e-34dc-4219-9c84-ffef5b61fc19",
                "apiVersion": "apps/v1",
                "resourceVersion": "961"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: docker-authentication-service-55f98b457f-2pg88",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-07-01T21:16:00Z",
            "lastTimestamp": "2023-07-01T21:16:00Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "docker-authentication-service.176ddaf04d585a14",
                "namespace": "default",
                "uid": "12e6cf69-a8df-4fff-b1bd-3267b6ad6a96",
                "resourceVersion": "964",
                "creationTimestamp": "2023-07-01T21:16:00Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "docker-authentication-service",
                "uid": "34f5d44d-9ab2-4d0c-8725-ba62a148c0de",
                "apiVersion": "apps/v1",
                "resourceVersion": "960"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set docker-authentication-service-55f98b457f to 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-07-01T21:16:00Z",
            "lastTimestamp": "2023-07-01T21:16:00Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "minikube.176e11902930c67c",
                "namespace": "default",
                "uid": "e8254049-1d66-4225-aeed-969b7e847848",
                "resourceVersion": "4013",
                "creationTimestamp": "2023-07-02T13:57:11Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:01Z",
            "lastTimestamp": "2023-07-02T13:57:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "minikube.176e119030083cb4",
                "namespace": "default",
                "uid": "d23f2e1e-dd7e-4a2b-97e1-b3a2b80d73e1",
                "resourceVersion": "4043",
                "creationTimestamp": "2023-07-02T13:57:11Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node minikube status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:01Z",
            "lastTimestamp": "2023-07-02T13:57:01Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "minikube.176e11903009106c",
                "namespace": "default",
                "uid": "411a894b-048f-46f3-a9a5-45401c995ab1",
                "resourceVersion": "4044",
                "creationTimestamp": "2023-07-02T13:57:11Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node minikube status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:01Z",
            "lastTimestamp": "2023-07-02T13:57:01Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "minikube.176e119030093ee8",
                "namespace": "default",
                "uid": "025d0a98-f06a-4187-a7b3-f6b6d1c086d5",
                "resourceVersion": "4041",
                "creationTimestamp": "2023-07-02T13:57:11Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node minikube status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:01Z",
            "lastTimestamp": "2023-07-02T13:57:01Z",
            "count": 7,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "minikube.176e1190358f9600",
                "namespace": "default",
                "uid": "dec3592d-7300-4b44-9eb6-2302ce77f1d1",
                "resourceVersion": "4020",
                "creationTimestamp": "2023-07-02T13:57:11Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-07-02T13:57:01Z",
            "lastTimestamp": "2023-07-02T13:57:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "minikube.176e1194d7ac2bac",
                "namespace": "default",
                "uid": "3c18f842-2a6d-41ed-b8db-8a15e1649976",
                "resourceVersion": "4102",
                "creationTimestamp": "2023-07-02T13:57:21Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-07-02T13:57:21.281729Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-minikube"
        },
        {
            "metadata": {
                "name": "minikube.176e11958a068018",
                "namespace": "default",
                "uid": "91573697-b5fb-4ad1-9c5e-1a500e338a2a",
                "resourceVersion": "4122",
                "creationTimestamp": "2023-07-02T13:57:24Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "e7a6443f-e718-4a63-b3e4-11ed922848cd",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node minikube event: Registered Node minikube in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-07-02T13:57:24Z",
            "lastTimestamp": "2023-07-02T13:57:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "assignmentservice",
                "namespace": "default",
                "uid": "adb08ff2-39b4-4391-84fb-a90c456df84f",
                "resourceVersion": "1332",
                "creationTimestamp": "2023-07-01T21:22:32Z",
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"assignmentservice\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":35351,\"targetPort\":3031}],\"selector\":{\"app\":\"assignmentservice\"},\"type\":\"LoadBalancer\"}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 35351,
                        "targetPort": 3031,
                        "nodePort": 30717
                    }
                ],
                "selector": {
                    "app": "assignmentservice"
                },
                "clusterIP": "10.96.184.151",
                "clusterIPs": [
                    "10.96.184.151"
                ],
                "type": "LoadBalancer",
                "sessionAffinity": "None",
                "externalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "allocateLoadBalancerNodePorts": true,
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "docker-authentication-service",
                "namespace": "default",
                "uid": "c73ebb71-02de-494f-a6fc-b527509ab0a5",
                "resourceVersion": "957",
                "creationTimestamp": "2023-07-01T21:16:00Z",
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"docker-authentication-service\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":35351,\"targetPort\":3031}],\"selector\":{\"app\":\"docker-authentication-service\"},\"type\":\"LoadBalancer\"}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 35351,
                        "targetPort": 3031,
                        "nodePort": 30168
                    }
                ],
                "selector": {
                    "app": "docker-authentication-service"
                },
                "clusterIP": "10.108.196.222",
                "clusterIPs": [
                    "10.108.196.222"
                ],
                "type": "LoadBalancer",
                "sessionAffinity": "None",
                "externalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "allocateLoadBalancerNodePorts": true,
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "fc3a8f02-36f3-4c37-84ce-1f71949386ba",
                "resourceVersion": "198",
                "creationTimestamp": "2023-07-01T21:05:23Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 8443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "assignmentservice",
                "namespace": "default",
                "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                "resourceVersion": "4340",
                "generation": 7,
                "creationTimestamp": "2023-07-01T21:22:32Z",
                "annotations": {
                    "deployment.kubernetes.io/revision": "4",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"assignmentservice\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"assignmentservice\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"assignmentservice\"}},\"spec\":{\"containers\":[{\"image\":\"abi20/assignmentservice:v2\",\"name\":\"assignmentservice\",\"ports\":[{\"containerPort\":3031}],\"resources\":{\"limits\":{\"cpu\":\"2\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"0.01\",\"memory\":\"2Mi\"}}}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "assignmentservice"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "assignmentservice"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "assignmentservice",
                                "image": "abi20/assignmentservice:v2",
                                "ports": [
                                    {
                                        "containerPort": 3031,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "2Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 7,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-07-01T21:45:53Z",
                        "lastTransitionTime": "2023-07-01T21:22:32Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"assignmentservice-6c88f459cc\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2023-07-02T14:00:26Z",
                        "lastTransitionTime": "2023-07-02T14:00:26Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc",
                "namespace": "default",
                "uid": "9afee194-a8e9-4240-aee2-bbef472e3c46",
                "resourceVersion": "4339",
                "generation": 6,
                "creationTimestamp": "2023-07-01T21:36:22Z",
                "labels": {
                    "app": "assignmentservice",
                    "pod-template-hash": "6c88f459cc"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "4",
                    "deployment.kubernetes.io/revision-history": "2"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "assignmentservice",
                        "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "assignmentservice",
                        "pod-template-hash": "6c88f459cc"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "assignmentservice",
                            "pod-template-hash": "6c88f459cc"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "assignmentservice",
                                "image": "abi20/assignmentservice:v2",
                                "ports": [
                                    {
                                        "containerPort": 3031,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "2Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 6
            }
        },
        {
            "metadata": {
                "name": "assignmentservice-6fcd44cc4",
                "namespace": "default",
                "uid": "708d7fa6-8bca-4720-93a9-e9a51d78ded3",
                "resourceVersion": "2107",
                "generation": 2,
                "creationTimestamp": "2023-07-01T21:22:32Z",
                "labels": {
                    "app": "assignmentservice",
                    "pod-template-hash": "6fcd44cc4"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "assignmentservice",
                        "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 0,
                "selector": {
                    "matchLabels": {
                        "app": "assignmentservice",
                        "pod-template-hash": "6fcd44cc4"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "assignmentservice",
                            "pod-template-hash": "6fcd44cc4"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "assignmentservice",
                                "image": "abi20/assignmentservice:v1",
                                "ports": [
                                    {
                                        "containerPort": 3031,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "2Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 0,
                "observedGeneration": 2
            }
        },
        {
            "metadata": {
                "name": "assignmentservice-7556496b7c",
                "namespace": "default",
                "uid": "81bfbed0-5d7c-4df8-80ff-6aeec2e3e095",
                "resourceVersion": "2633",
                "generation": 2,
                "creationTimestamp": "2023-07-01T21:44:57Z",
                "labels": {
                    "app": "assignmentservice",
                    "pod-template-hash": "7556496b7c"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "3"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "assignmentservice",
                        "uid": "fce56aa2-a13c-474c-ae75-73e6232bbc37",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 0,
                "selector": {
                    "matchLabels": {
                        "app": "assignmentservice",
                        "pod-template-hash": "7556496b7c"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "assignmentservice",
                            "pod-template-hash": "7556496b7c"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "assign-ser",
                                "image": "abi20/assignmentservice:v2",
                                "ports": [
                                    {
                                        "containerPort": 3031,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "2Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 0,
                "observedGeneration": 2
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "4558"
    },
    "items": [
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gtczk",
                "generateName": "assignmentservice-6c88f459cc-",
                "namespace": "default",
                "uid": "d94c20e6-3529-4fb6-9f1f-d699dd53c650",
                "resourceVersion": "4094",
                "creationTimestamp": "2023-07-01T21:45:51Z",
                "labels": {
                    "app": "assignmentservice",
                    "pod-template-hash": "6c88f459cc"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "assignmentservice-6c88f459cc",
                        "uid": "9afee194-a8e9-4240-aee2-bbef472e3c46",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-4bn86",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "assignmentservice",
                        "image": "abi20/assignmentservice:v2",
                        "ports": [
                            {
                                "containerPort": 3031,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "2Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-4bn86",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "minikube",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:45:51Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:20Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T13:57:20Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-01T21:45:51Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "10.244.0.12",
                "podIPs": [
                    {
                        "ip": "10.244.0.12"
                    }
                ],
                "startTime": "2023-07-01T21:45:51Z",
                "containerStatuses": [
                    {
                        "name": "assignmentservice",
                        "state": {
                            "running": {
                                "startedAt": "2023-07-02T13:57:17Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2023-07-01T21:45:52Z",
                                "finishedAt": "2023-07-02T13:56:41Z",
                                "containerID": "docker://c050e045c8f194a85ae998a1c8d08bad93abc9bfc92d197251077b37064de312"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "abi20/assignmentservice:v2",
                        "imageID": "docker-pullable://abi20/assignmentservice@sha256:e5a3b5d7686cda17419e0cdbb0d025a88c3699f4334925c22bb8e054a705332c",
                        "containerID": "docker://a3bbb53cc9714e4def14740425e58f07b0029ab02740d95db67544e7b68711e9",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "assignmentservice-6c88f459cc-gx7jx",
                "generateName": "assignmentservice-6c88f459cc-",
                "namespace": "default",
                "uid": "aaa62369-c1b2-404b-8caa-2f773ad7f277",
                "resourceVersion": "4336",
                "creationTimestamp": "2023-07-02T14:00:24Z",
                "labels": {
                    "app": "assignmentservice",
                    "pod-template-hash": "6c88f459cc"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "assignmentservice-6c88f459cc",
                        "uid": "9afee194-a8e9-4240-aee2-bbef472e3c46",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-4bw2r",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "assignmentservice",
                        "image": "abi20/assignmentservice:v2",
                        "ports": [
                            {
                                "containerPort": 3031,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "2Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-4bw2r",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "minikube",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T14:00:24Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T14:00:26Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T14:00:26Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-07-02T14:00:24Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "10.244.0.16",
                "podIPs": [
                    {
                        "ip": "10.244.0.16"
                    }
                ],
                "startTime": "2023-07-02T14:00:24Z",
                "containerStatuses": [
                    {
                        "name": "assignmentservice",
                        "state": {
                            "running": {
                                "startedAt": "2023-07-02T14:00:25Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "abi20/assignmentservice:v2",
                        "imageID": "docker-pullable://abi20/assignmentservice@sha256:e5a3b5d7686cda17419e0cdbb0d025a88c3699f4334925c22bb8e054a705332c",
                        "containerID": "docker://9fc9fe82d730c60635ac2ab0fadb2961c5aaef5c3f70b90b652da2b81d314d6b",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container assignmentservice of pod default/assignmentservice-6c88f459cc-gtczk ====
Assignment service up and running on http://${HOST}:${PORT}
Version 1 - latest
==== END logs for container assignmentservice of pod default/assignmentservice-6c88f459cc-gtczk ====
==== START logs for container assignmentservice of pod default/assignmentservice-6c88f459cc-gx7jx ====
Assignment service up and running on http://${HOST}:${PORT}
Version 1 - latest
==== END logs for container assignmentservice of pod default/assignmentservice-6c88f459cc-gx7jx ====
